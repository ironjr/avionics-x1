

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Nov 03 22:34:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 1.45 (B)
    37                           ; Generated 30/01/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F26K83 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _PMD7	set	14791
    71  0000                     _PMD6	set	14790
    72  0000                     _PMD5	set	14789
    73  0000                     _PMD4	set	14788
    74  0000                     _PMD3	set	14787
    75  0000                     _PMD2	set	14786
    76  0000                     _PMD1	set	14785
    77  0000                     _PMD0	set	14784
    78  0000                     _OSCTUNE	set	14814
    79  0000                     _OSCFRQ	set	14815
    80  0000                     _OSCEN	set	14813
    81  0000                     _OSCCON3	set	14811
    82  0000                     _OSCCON1	set	14809
    83  0000                     _I2C1SCLPPS	set	15075
    84  0000                     _RC1PPS	set	14865
    85  0000                     _I2C1SDAPPS	set	15076
    86  0000                     _RC0PPS	set	14864
    87  0000                     _SLRCONC	set	14947
    88  0000                     _SLRCONB	set	14931
    89  0000                     _SLRCONA	set	14915
    90  0000                     _ODCONC	set	14946
    91  0000                     _ODCONB	set	14930
    92  0000                     _ODCONA	set	14914
    93  0000                     _WPUC	set	14945
    94  0000                     _WPUA	set	14913
    95  0000                     _WPUB	set	14929
    96  0000                     _WPUE	set	14977
    97  0000                     _ANSELA	set	14912
    98  0000                     _ANSELB	set	14928
    99  0000                     _ANSELC	set	14944
   100  0000                     _I2C1ADB1	set	15726
   101  0000                     _I2C1CNT	set	15724
   102  0000                     _I2C1PIRbits	set	15737
   103  0000                     _I2C1RXB	set	15722
   104  0000                     _I2C1TXB	set	15723
   105  0000                     _I2C1STAT1bits	set	15736
   106  0000                     _I2C1STAT0bits	set	15735
   107  0000                     _I2C1ERR	set	15734
   108  0000                     _I2C1PIR	set	15737
   109  0000                     _I2C1CON0	set	15731
   110  0000                     _I2C1CLK	set	15739
   111  0000                     _I2C1CON2	set	15733
   112  0000                     _I2C1CON1	set	15732
   113  0000                     _I2C1CON0bits	set	15731
   114  0000                     _TRISC	set	16324
   115  0000                     _TRISB	set	16323
   116  0000                     _TRISA	set	16322
   117  0000                     _LATC	set	16316
   118  0000                     _LATB	set	16315
   119  0000                     _LATA	set	16314
   120  0000                     _LATAbits	set	16314
   121  0000                     _TRISAbits	set	16322
   122  0000                     _LATBbits	set	16315
   123  0000                     _TRISBbits	set	16323
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  00F0B6                     __pcinit:
   129                           	opt stack 0
   130  00F0B6                     start_initialization:
   131                           	opt stack 0
   132  00F0B6                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to BANK0 (24 bytes)
   136  00F0B6  EE00  F060         	lfsr	0,__pbssBANK0
   137  00F0BA  0E18               	movlw	24
   138  00F0BC                     clear_0:
   139  00F0BC  6AEE               	clrf	16366,c
   140  00F0BE  06E8               	decf	16360,f,c
   141  00F0C0  E1FD               	bnz	clear_0
   142                           
   143                           ; Clear objects allocated to COMRAM (5 bytes)
   144  00F0C2  6A4D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   145  00F0C4  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   146  00F0C6  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   147  00F0C8  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   148  00F0CA  6A49               	clrf	__pbssCOMRAM& (0+255),c
   149  00F0CC                     end_of_initialization:
   150                           	opt stack 0
   151  00F0CC                     __end_of__initialization:
   152                           	opt stack 0
   153  00F0CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   154  00F0CE  6EF8               	movwf	16376,c
   155  00F0D0  0100               	movlb	0
   156  00F0D2  EF72  F079         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159  000049                     __pbssCOMRAM:
   160                           	opt stack 0
   161  000049                     _bmp280_t_fine:
   162                           	opt stack 0
   163  000049                     	ds	4
   164  00004D                     _lastError:
   165                           	opt stack 0
   166  00004D                     	ds	1
   167                           
   168                           	psect	bssBANK0
   169  000060                     __pbssBANK0:
   170                           	opt stack 0
   171  000060                     _bmp280_calib:
   172                           	opt stack 0
   173  000060                     	ds	24
   174                           
   175                           	psect	cstackCOMRAM
   176  000001                     __pcstackCOMRAM:
   177                           	opt stack 0
   178  000001                     ?___lmul:
   179                           	opt stack 0
   180  000001                     ?___lldiv:
   181                           	opt stack 0
   182  000001                     wait4Start@waitCount:
   183                           	opt stack 0
   184  000001                     wait4BusFree@waitCount:
   185                           	opt stack 0
   186  000001                     sendByte@data:
   187                           	opt stack 0
   188  000001                     receiveByte@delayCounter:
   189                           	opt stack 0
   190  000001                     wait4Stop@waitCount:
   191                           	opt stack 0
   192  000001                     wait4MDRSetcount@count:
   193                           	opt stack 0
   194  000001                     ___lmul@multiplier:
   195                           	opt stack 0
   196  000001                     ___lldiv@dividend:
   197                           	opt stack 0
   198                           
   199                           ; 4 bytes @ 0x0
   200  000001                     	ds	1
   201  000002                     sendByte@delayCounter:
   202                           	opt stack 0
   203  000002                     wait4MDRSetcount@waitCount:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x1
   207  000002                     	ds	1
   208  000003                     i2c1_write1ByteRegister@reg:
   209                           	opt stack 0
   210  000003                     i2c1_read1ByteRegister@reg:
   211                           	opt stack 0
   212  000003                     i2c1_readDataBlock@reg:
   213                           	opt stack 0
   214                           
   215                           ; 1 bytes @ 0x2
   216  000003                     	ds	1
   217  000004                     i2c1_write1ByteRegister@data:
   218                           	opt stack 0
   219  000004                     i2c1_read1ByteRegister@result:
   220                           	opt stack 0
   221  000004                     i2c1_readDataBlock@data:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x3
   225  000004                     	ds	1
   226  000005                     i2c1_write1ByteRegister@address:
   227                           	opt stack 0
   228  000005                     i2c1_read1ByteRegister@address:
   229                           	opt stack 0
   230  000005                     ___lmul@multiplicand:
   231                           	opt stack 0
   232  000005                     ___lldiv@divisor:
   233                           	opt stack 0
   234                           
   235                           ; 4 bytes @ 0x4
   236  000005                     	ds	1
   237  000006                     bmp280_i2c_set_ctrl@osrs_p:
   238                           	opt stack 0
   239  000006                     bmp280_i2c_set_conf@filter:
   240                           	opt stack 0
   241  000006                     i2c1_readDataBlock@len:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x5
   245  000006                     	ds	1
   246  000007                     ??_bmp280_i2c_set_conf:
   247  000007                     bmp280_i2c_set_ctrl@mode:
   248                           	opt stack 0
   249  000007                     i2c1_readDataBlock@address:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x6
   253  000007                     	ds	1
   254  000008                     ??_bmp280_i2c_set_ctrl:
   255  000008                     ?_bmp280_i2c_read_press_raw:
   256                           	opt stack 0
   257                           
   258                           ; 4 bytes @ 0x7
   259  000008                     	ds	1
   260  000009                     ___lmul@product:
   261                           	opt stack 0
   262  000009                     ___lldiv@quotient:
   263                           	opt stack 0
   264                           
   265                           ; 4 bytes @ 0x8
   266  000009                     	ds	2
   267  00000B                     bmp280_i2c_set_conf@t_sb:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0xA
   271  00000B                     	ds	1
   272  00000C                     ??_bmp280_i2c_read_press_raw:
   273  00000C                     bmp280_i2c_set_ctrl@osrs_t:
   274                           	opt stack 0
   275  00000C                     bmp280_i2c_set_conf@cfg:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0xB
   279  00000C                     	ds	1
   280  00000D                     ?_bmp280_i2c_read_temp_i32:
   281                           	opt stack 0
   282  00000D                     bmp280_i2c_set_ctrl@ctrl:
   283                           	opt stack 0
   284  00000D                     ___lldiv@counter:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0xC
   288  00000D                     	ds	4
   289  000011                     ??_bmp280_i2c_read_temp_i32:
   290                           
   291                           ; 1 bytes @ 0x10
   292  000011                     	ds	8
   293  000019                     bmp280_i2c_read_press_raw@p_read:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x18
   297  000019                     	ds	3
   298  00001C                     ?_bmp280_i2c_read_press_i32:
   299                           	opt stack 0
   300                           
   301                           ; 4 bytes @ 0x1B
   302  00001C                     	ds	3
   303  00001F                     bmp280_i2c_read_temp_i32@temp1:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x1E
   307  00001F                     	ds	1
   308  000020                     ??_bmp280_i2c_read_press_i32:
   309                           
   310                           ; 1 bytes @ 0x1F
   311  000020                     	ds	3
   312  000023                     bmp280_i2c_read_temp_i32@temp3:
   313                           	opt stack 0
   314                           
   315                           ; 4 bytes @ 0x22
   316  000023                     	ds	4
   317  000027                     bmp280_i2c_read_temp_i32@T:
   318                           	opt stack 0
   319                           
   320                           ; 4 bytes @ 0x26
   321  000027                     	ds	4
   322  00002B                     _bmp280_i2c_read_temp_i32$1215:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0x2A
   326  00002B                     	ds	2
   327  00002D                     bmp280_i2c_read_press_i32@adc_P:
   328                           	opt stack 0
   329                           
   330                           ; 4 bytes @ 0x2C
   331  00002D                     	ds	2
   332  00002F                     bmp280_i2c_read_temp_i32@t_read:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x2E
   336  00002F                     	ds	2
   337  000031                     _bmp280_i2c_read_press_i32$1216:
   338                           	opt stack 0
   339                           
   340                           ; 4 bytes @ 0x30
   341  000031                     	ds	1
   342  000032                     bmp280_i2c_read_temp_i32@adc_T:
   343                           	opt stack 0
   344                           
   345                           ; 4 bytes @ 0x31
   346  000032                     	ds	3
   347  000035                     bmp280_i2c_read_press_i32@var2:
   348                           	opt stack 0
   349                           
   350                           ; 4 bytes @ 0x34
   351  000035                     	ds	1
   352  000036                     bmp280_i2c_read_temp_i32@temp2:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0x35
   356  000036                     	ds	3
   357  000039                     bmp280_i2c_read_press_i32@P:
   358                           	opt stack 0
   359                           
   360                           ; 4 bytes @ 0x38
   361  000039                     	ds	4
   362  00003D                     bmp280_i2c_read_press_i32@var1:
   363                           	opt stack 0
   364                           
   365                           ; 4 bytes @ 0x3C
   366  00003D                     	ds	4
   367  000041                     main@temp:
   368                           	opt stack 0
   369                           
   370                           ; 4 bytes @ 0x40
   371  000041                     	ds	4
   372  000045                     main@press:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x44
   376  000045                     	ds	4
   377                           
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 73 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  press           4   68[COMRAM] long 
   388 ;;  temp            4   64[COMRAM] long 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;Total ram usage:        8 bytes
   403 ;; Hardware stack levels required when called:    4
   404 ;; This function calls:
   405 ;;		_SYSTEM_Initialize
   406 ;;		_bmp280_i2c_init
   407 ;;		_bmp280_i2c_read_press_i32
   408 ;;		_bmp280_i2c_read_temp_i32
   409 ;;		_bmp280_i2c_set_conf
   410 ;;		_bmp280_i2c_set_ctrl
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text0
   417  00F2E4                     __ptext0:
   418                           	opt stack 0
   419  00F2E4                     _main:
   420                           	opt stack 27
   421                           
   422                           ;main.c: 74: SYSTEM_Initialize();
   423                           
   424                           ;incstack = 0
   425  00F2E4  EC01  F078         	call	_SYSTEM_Initialize	;wreg free
   426                           
   427                           ;main.c: 75: bmp280_i2c_init();
   428  00F2E8  EC3D  F078         	call	_bmp280_i2c_init	;wreg free
   429                           
   430                           ;main.c: 76: bmp280_i2c_set_ctrl(0x2, 0x3, 0x3);
   431  00F2EC  0E03               	movlw	3
   432  00F2EE  6E06               	movwf	bmp280_i2c_set_ctrl@osrs_p,c
   433  00F2F0  0E03               	movlw	3
   434  00F2F2  6E07               	movwf	bmp280_i2c_set_ctrl@mode,c
   435  00F2F4  0E02               	movlw	2
   436  00F2F6  ECF4  F078         	call	_bmp280_i2c_set_ctrl
   437                           
   438                           ;main.c: 77: bmp280_i2c_set_conf(0x0, 0x2);
   439  00F2FA  0E02               	movlw	2
   440  00F2FC  6E06               	movwf	bmp280_i2c_set_conf@filter,c
   441  00F2FE  0E00               	movlw	0
   442  00F300  EC45  F079         	call	_bmp280_i2c_set_conf
   443  00F304                     
   444                           ;main.c: 82: temp = bmp280_i2c_read_temp_i32();
   445  00F304  EC8A  F07A         	call	_bmp280_i2c_read_temp_i32	;wreg free
   446  00F308  0060  F034  F041   	movff	?_bmp280_i2c_read_temp_i32,main@temp
   447  00F30E  0060  F038  F042   	movff	?_bmp280_i2c_read_temp_i32+1,main@temp+1
   448  00F314  0060  F03C  F043   	movff	?_bmp280_i2c_read_temp_i32+2,main@temp+2
   449  00F31A  0060  F040  F044   	movff	?_bmp280_i2c_read_temp_i32+3,main@temp+3
   450                           
   451                           ;main.c: 83: press = bmp280_i2c_read_press_i32();
   452  00F320  EC1E  F07C         	call	_bmp280_i2c_read_press_i32	;wreg free
   453  00F324  0060  F070  F045   	movff	?_bmp280_i2c_read_press_i32,main@press
   454  00F32A  0060  F074  F046   	movff	?_bmp280_i2c_read_press_i32+1,main@press+1
   455  00F330  0060  F078  F047   	movff	?_bmp280_i2c_read_press_i32+2,main@press+2
   456  00F336  0060  F07C  F048   	movff	?_bmp280_i2c_read_press_i32+3,main@press+3
   457  00F33C  D7E3               	goto	l60
   458  00F33E                     __end_of_main:
   459                           	opt stack 0
   460                           
   461 ;; *************** function _bmp280_i2c_set_ctrl *****************
   462 ;; Defined at:
   463 ;;		line 25 in file "bmp280.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  osrs_t          1    wreg     unsigned char 
   466 ;;  osrs_p          1    5[COMRAM] unsigned char 
   467 ;;  mode            1    6[COMRAM] unsigned char 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  osrs_t          1   11[COMRAM] unsigned char 
   470 ;;  ctrl            1   12[COMRAM] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;Total ram usage:        8 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    2
   487 ;; This function calls:
   488 ;;		_i2c1_write1ByteRegister
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  00F1E8                     __ptext1:
   496                           	opt stack 0
   497  00F1E8                     _bmp280_i2c_set_ctrl:
   498                           	opt stack 28
   499                           
   500                           ;incstack = 0
   501                           ;bmp280_i2c_set_ctrl@osrs_t stored from wreg
   502  00F1E8  6E0C               	movwf	bmp280_i2c_set_ctrl@osrs_t,c
   503                           
   504                           ;bmp280.c: 26: uint8_t ctrl = (uint8_t)(((osrs_t & 0x7) << 5) |
   505                           ;bmp280.c: 27: ((osrs_p & 0x7) << 2) |
   506                           ;bmp280.c: 28: (mode & 0x3));
   507  00F1EA  0060  F01C  F008   	movff	bmp280_i2c_set_ctrl@mode,??_bmp280_i2c_set_ctrl
   508  00F1F0  0E03               	movlw	3
   509  00F1F2  1608               	andwf	??_bmp280_i2c_set_ctrl,f,c
   510  00F1F4  0060  F018  F009   	movff	bmp280_i2c_set_ctrl@osrs_p,??_bmp280_i2c_set_ctrl+1
   511  00F1FA  0E07               	movlw	7
   512  00F1FC  1609               	andwf	??_bmp280_i2c_set_ctrl+1,f,c
   513  00F1FE  90D8               	bcf	16344,0,c
   514  00F200  3609               	rlcf	??_bmp280_i2c_set_ctrl+1,f,c
   515  00F202  90D8               	bcf	16344,0,c
   516  00F204  3609               	rlcf	??_bmp280_i2c_set_ctrl+1,f,c
   517  00F206  0060  F030  F00A   	movff	bmp280_i2c_set_ctrl@osrs_t,??_bmp280_i2c_set_ctrl+2
   518  00F20C  0E07               	movlw	7
   519  00F20E  160A               	andwf	??_bmp280_i2c_set_ctrl+2,f,c
   520  00F210  0E05               	movlw	5
   521  00F212  6E0B               	movwf	(??_bmp280_i2c_set_ctrl+3)& (0+255),c
   522  00F214                     u825:
   523  00F214  90D8               	bcf	16344,0,c
   524  00F216  360A               	rlcf	??_bmp280_i2c_set_ctrl+2,f,c
   525  00F218  2E0B               	decfsz	(??_bmp280_i2c_set_ctrl+3)& (0+255),f,c
   526  00F21A  D7FC               	goto	u825
   527  00F21C  500A               	movf	??_bmp280_i2c_set_ctrl+2,w,c
   528  00F21E  1009               	iorwf	??_bmp280_i2c_set_ctrl+1,w,c
   529  00F220  1008               	iorwf	??_bmp280_i2c_set_ctrl,w,c
   530  00F222  6E0D               	movwf	bmp280_i2c_set_ctrl@ctrl,c
   531                           
   532                           ;bmp280.c: 29: i2c1_write1ByteRegister(
   533                           ;bmp280.c: 30: 0b1110110,
   534                           ;bmp280.c: 31: 0xF4,
   535                           ;bmp280.c: 32: ctrl);
   536  00F224  0EF4               	movlw	244
   537  00F226  6E03               	movwf	i2c1_write1ByteRegister@reg,c
   538  00F228  0060  F034  F004   	movff	bmp280_i2c_set_ctrl@ctrl,i2c1_write1ByteRegister@data
   539  00F22E  0E76               	movlw	118
   540  00F230  ECB6  F078         	call	_i2c1_write1ByteRegister
   541  00F234  0012               	return		;funcret
   542  00F236                     __end_of_bmp280_i2c_set_ctrl:
   543                           	opt stack 0
   544                           
   545 ;; *************** function _bmp280_i2c_set_conf *****************
   546 ;; Defined at:
   547 ;;		line 35 in file "bmp280.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  t_sb            1    wreg     unsigned char 
   550 ;;  filter          1    5[COMRAM] unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  t_sb            1   10[COMRAM] unsigned char 
   553 ;;  cfg             1   11[COMRAM] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        7 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    2
   570 ;; This function calls:
   571 ;;		_i2c1_read1ByteRegister
   572 ;;		_i2c1_write1ByteRegister
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text2
   579  00F28A                     __ptext2:
   580                           	opt stack 0
   581  00F28A                     _bmp280_i2c_set_conf:
   582                           	opt stack 28
   583                           
   584                           ;incstack = 0
   585                           ;bmp280_i2c_set_conf@t_sb stored from wreg
   586  00F28A  6E0B               	movwf	bmp280_i2c_set_conf@t_sb,c
   587                           
   588                           ;bmp280.c: 36: uint8_t cfg;
   589                           ;bmp280.c: 37: cfg = i2c1_read1ByteRegister(
   590                           ;bmp280.c: 38: 0b1110110,
   591                           ;bmp280.c: 39: 0xF5);
   592  00F28C  0EF5               	movlw	245
   593  00F28E  6E03               	movwf	i2c1_read1ByteRegister@reg,c
   594  00F290  0E76               	movlw	118
   595  00F292  ECCE  F078         	call	_i2c1_read1ByteRegister
   596  00F296  6E0C               	movwf	bmp280_i2c_set_conf@cfg,c
   597                           
   598                           ;bmp280.c: 40: cfg = (uint8_t)(((t_sb & 0x7) << 5) |
   599                           ;bmp280.c: 41: ((filter & 0x7) << 2) |
   600                           ;bmp280.c: 42: (cfg & 0x3));
   601  00F298  0060  F030  F007   	movff	bmp280_i2c_set_conf@cfg,??_bmp280_i2c_set_conf
   602  00F29E  0E03               	movlw	3
   603  00F2A0  1607               	andwf	??_bmp280_i2c_set_conf,f,c
   604  00F2A2  0060  F018  F008   	movff	bmp280_i2c_set_conf@filter,??_bmp280_i2c_set_conf+1
   605  00F2A8  0E07               	movlw	7
   606  00F2AA  1608               	andwf	??_bmp280_i2c_set_conf+1,f,c
   607  00F2AC  90D8               	bcf	16344,0,c
   608  00F2AE  3608               	rlcf	??_bmp280_i2c_set_conf+1,f,c
   609  00F2B0  90D8               	bcf	16344,0,c
   610  00F2B2  3608               	rlcf	??_bmp280_i2c_set_conf+1,f,c
   611  00F2B4  0060  F02C  F009   	movff	bmp280_i2c_set_conf@t_sb,??_bmp280_i2c_set_conf+2
   612  00F2BA  0E07               	movlw	7
   613  00F2BC  1609               	andwf	??_bmp280_i2c_set_conf+2,f,c
   614  00F2BE  0E05               	movlw	5
   615  00F2C0  6E0A               	movwf	(??_bmp280_i2c_set_conf+3)& (0+255),c
   616  00F2C2                     u835:
   617  00F2C2  90D8               	bcf	16344,0,c
   618  00F2C4  3609               	rlcf	??_bmp280_i2c_set_conf+2,f,c
   619  00F2C6  2E0A               	decfsz	(??_bmp280_i2c_set_conf+3)& (0+255),f,c
   620  00F2C8  D7FC               	goto	u835
   621  00F2CA  5009               	movf	??_bmp280_i2c_set_conf+2,w,c
   622  00F2CC  1008               	iorwf	??_bmp280_i2c_set_conf+1,w,c
   623  00F2CE  1007               	iorwf	??_bmp280_i2c_set_conf,w,c
   624  00F2D0  6E0C               	movwf	bmp280_i2c_set_conf@cfg,c
   625                           
   626                           ;bmp280.c: 43: i2c1_write1ByteRegister(
   627                           ;bmp280.c: 44: 0b1110110,
   628                           ;bmp280.c: 45: 0xF5,
   629                           ;bmp280.c: 46: cfg);
   630  00F2D2  0EF5               	movlw	245
   631  00F2D4  6E03               	movwf	i2c1_write1ByteRegister@reg,c
   632  00F2D6  0060  F030  F004   	movff	bmp280_i2c_set_conf@cfg,i2c1_write1ByteRegister@data
   633  00F2DC  0E76               	movlw	118
   634  00F2DE  ECB6  F078         	call	_i2c1_write1ByteRegister
   635  00F2E2  0012               	return		;funcret
   636  00F2E4                     __end_of_bmp280_i2c_set_conf:
   637                           	opt stack 0
   638                           
   639 ;; *************** function _i2c1_write1ByteRegister *****************
   640 ;; Defined at:
   641 ;;		line 203 in file "mcc_generated_files/i2c1.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  address         1    wreg     unsigned char 
   644 ;;  reg             1    2[COMRAM] unsigned char 
   645 ;;  data            1    3[COMRAM] unsigned char 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  address         1    4[COMRAM] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;Total ram usage:        3 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    1
   664 ;; This function calls:
   665 ;;		_I2C1_Initialize
   666 ;;		_sendByte
   667 ;;		_wait4BusFree
   668 ;;		_wait4Start
   669 ;;		_wait4Stop
   670 ;; This function is called by:
   671 ;;		_bmp280_i2c_set_ctrl
   672 ;;		_bmp280_i2c_set_conf
   673 ;;		_bmp280_i2c_set_osrs_t
   674 ;;		_bmp280_i2c_set_osrs_p
   675 ;;		_bmp280_i2c_set_mode
   676 ;;		_bmp280_i2c_set_t_sb
   677 ;;		_bmp280_i2c_set_filter
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text3
   682  00F16C                     __ptext3:
   683                           	opt stack 0
   684  00F16C                     _i2c1_write1ByteRegister:
   685                           	opt stack 28
   686                           
   687                           ;incstack = 0
   688                           ;i2c1_write1ByteRegister@address stored from wreg
   689  00F16C  6E05               	movwf	i2c1_write1ByteRegister@address,c
   690                           
   691                           ;i2c1.c: 205: I2C1_Initialize();
   692  00F16E  ECA1  F078         	call	_I2C1_Initialize	;wreg free
   693                           
   694                           ;i2c1.c: 206: I2C1ADB1 = (uint8_t)(address<<1);
   695  00F172  5005               	movf	i2c1_write1ByteRegister@address,w,c
   696  00F174  2405               	addwf	i2c1_write1ByteRegister@address,w,c
   697  00F176  013D               	movlb	61	; () banked
   698  00F178  6F6E               	movwf	110,b	;volatile
   699                           
   700                           ; BSR set to: 61
   701                           ;i2c1.c: 207: wait4BusFree();
   702  00F17A  EC16  F078         	call	_wait4BusFree	;wreg free
   703                           
   704                           ;i2c1.c: 208: I2C1CNT = 2;
   705  00F17E  0E02               	movlw	2
   706  00F180  013D               	movlb	61	; () banked
   707  00F182  6F6C               	movwf	108,b	;volatile
   708                           
   709                           ; BSR set to: 61
   710                           ;i2c1.c: 209: I2C1CON0bits.S = 1;
   711  00F184  8B73               	bsf	115,5,b	;volatile
   712                           
   713                           ; BSR set to: 61
   714                           ;i2c1.c: 210: wait4Start();
   715  00F186  EC23  F078         	call	_wait4Start	;wreg free
   716                           
   717                           ;i2c1.c: 211: sendByte(reg);
   718  00F18A  5003               	movf	i2c1_write1ByteRegister@reg,w,c
   719  00F18C  EC7D  F078         	call	_sendByte
   720                           
   721                           ;i2c1.c: 212: sendByte(data);
   722  00F190  5004               	movf	i2c1_write1ByteRegister@data,w,c
   723  00F192  EC7D  F078         	call	_sendByte
   724                           
   725                           ;i2c1.c: 213: wait4Stop();
   726  00F196  EC30  F078         	call	_wait4Stop	;wreg free
   727  00F19A  0012               	return		;funcret
   728  00F19C                     __end_of_i2c1_write1ByteRegister:
   729                           	opt stack 0
   730                           
   731 ;; *************** function _i2c1_read1ByteRegister *****************
   732 ;; Defined at:
   733 ;;		line 247 in file "mcc_generated_files/i2c1.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  address         1    wreg     unsigned char 
   736 ;;  reg             1    2[COMRAM] unsigned char 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  address         1    4[COMRAM] unsigned char 
   739 ;;  result          1    3[COMRAM] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      unsigned char 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        3 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		_I2C1_Initialize
   758 ;;		_receiveByte
   759 ;;		_sendByte
   760 ;;		_wait4BusFree
   761 ;;		_wait4MDRSetcount
   762 ;;		_wait4Start
   763 ;;		_wait4Stop
   764 ;; This function is called by:
   765 ;;		_bmp280_i2c_set_conf
   766 ;;		_bmp280_i2c_set_osrs_t
   767 ;;		_bmp280_i2c_set_osrs_p
   768 ;;		_bmp280_i2c_set_mode
   769 ;;		_bmp280_i2c_set_t_sb
   770 ;;		_bmp280_i2c_set_filter
   771 ;;		_bmp280_i2c_get_osrs_t
   772 ;;		_bmp280_i2c_get_osrs_p
   773 ;;		_bmp280_i2c_get_mode
   774 ;;		_bmp280_i2c_get_t_sb
   775 ;;		_bmp280_i2c_get_filter
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text4
   780  00F19C                     __ptext4:
   781                           	opt stack 0
   782  00F19C                     _i2c1_read1ByteRegister:
   783                           	opt stack 28
   784                           
   785                           ;incstack = 0
   786                           ;i2c1_read1ByteRegister@address stored from wreg
   787  00F19C  6E05               	movwf	i2c1_read1ByteRegister@address,c
   788                           
   789                           ;i2c1.c: 249: uint8_t result;
   790                           ;i2c1.c: 251: I2C1_Initialize();
   791  00F19E  ECA1  F078         	call	_I2C1_Initialize	;wreg free
   792                           
   793                           ;i2c1.c: 252: I2C1ADB1 = (uint8_t)(address<<1);
   794  00F1A2  5005               	movf	i2c1_read1ByteRegister@address,w,c
   795  00F1A4  2405               	addwf	i2c1_read1ByteRegister@address,w,c
   796  00F1A6  013D               	movlb	61	; () banked
   797  00F1A8  6F6E               	movwf	110,b	;volatile
   798                           
   799                           ; BSR set to: 61
   800                           ;i2c1.c: 253: wait4BusFree();
   801  00F1AA  EC16  F078         	call	_wait4BusFree	;wreg free
   802                           
   803                           ;i2c1.c: 254: I2C1CNT = 1;
   804  00F1AE  0E01               	movlw	1
   805  00F1B0  013D               	movlb	61	; () banked
   806  00F1B2  6F6C               	movwf	108,b	;volatile
   807                           
   808                           ; BSR set to: 61
   809                           ;i2c1.c: 255: I2C1CON0bits.RSEN = 1;
   810  00F1B4  8D73               	bsf	115,6,b	;volatile
   811                           
   812                           ; BSR set to: 61
   813                           ;i2c1.c: 256: I2C1CON0bits.S = 1;
   814  00F1B6  8B73               	bsf	115,5,b	;volatile
   815                           
   816                           ; BSR set to: 61
   817                           ;i2c1.c: 257: wait4Start();
   818  00F1B8  EC23  F078         	call	_wait4Start	;wreg free
   819                           
   820                           ;i2c1.c: 258: sendByte(reg);
   821  00F1BC  5003               	movf	i2c1_read1ByteRegister@reg,w,c
   822  00F1BE  EC7D  F078         	call	_sendByte
   823                           
   824                           ;i2c1.c: 259: wait4MDRSetcount(1);
   825  00F1C2  0E01               	movlw	1
   826  00F1C4  EC8F  F078         	call	_wait4MDRSetcount
   827                           
   828                           ;i2c1.c: 260: address = (uint8_t)(address<<1);
   829  00F1C8  5005               	movf	i2c1_read1ByteRegister@address,w,c
   830  00F1CA  2405               	addwf	i2c1_read1ByteRegister@address,w,c
   831  00F1CC  6E05               	movwf	i2c1_read1ByteRegister@address,c
   832                           
   833                           ;i2c1.c: 261: I2C1ADB1 = (uint8_t)(address| 0x01);
   834  00F1CE  5005               	movf	i2c1_read1ByteRegister@address,w,c
   835  00F1D0  0901               	iorlw	1
   836  00F1D2  013D               	movlb	61	; () banked
   837  00F1D4  6F6E               	movwf	110,b	;volatile
   838                           
   839                           ; BSR set to: 61
   840                           ;i2c1.c: 262: I2C1CON0bits.S = 1;
   841  00F1D6  8B73               	bsf	115,5,b	;volatile
   842                           
   843                           ; BSR set to: 61
   844                           ;i2c1.c: 263: I2C1CON0bits.RSEN = 0;
   845  00F1D8  9D73               	bcf	115,6,b	;volatile
   846                           
   847                           ; BSR set to: 61
   848                           ;i2c1.c: 264: result = receiveByte();
   849  00F1DA  EC4B  F078         	call	_receiveByte	;wreg free
   850  00F1DE  6E04               	movwf	i2c1_read1ByteRegister@result,c
   851                           
   852                           ;i2c1.c: 265: wait4Stop();
   853  00F1E0  EC30  F078         	call	_wait4Stop	;wreg free
   854                           
   855                           ;i2c1.c: 266: return result;
   856  00F1E4  5004               	movf	i2c1_read1ByteRegister@result,w,c
   857  00F1E6  0012               	return	
   858  00F1E8                     __end_of_i2c1_read1ByteRegister:
   859                           	opt stack 0
   860                           
   861 ;; *************** function _bmp280_i2c_read_temp_i32 *****************
   862 ;; Defined at:
   863 ;;		line 154 in file "bmp280.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  temp2           4   53[COMRAM] long 
   868 ;;  adc_T           4   49[COMRAM] long 
   869 ;;  T               4   38[COMRAM] long 
   870 ;;  temp3           4   34[COMRAM] long 
   871 ;;  temp1           4   30[COMRAM] long 
   872 ;;  t_read          3   46[COMRAM] unsigned char [3]
   873 ;; Return value:  Size  Location     Type
   874 ;;                  4   12[COMRAM] long 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:        45       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:       45 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    2
   889 ;; This function calls:
   890 ;;		___lmul
   891 ;;		_i2c1_readDataBlock
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text5
   898  00F514                     __ptext5:
   899                           	opt stack 0
   900  00F514                     _bmp280_i2c_read_temp_i32:
   901                           	opt stack 28
   902                           
   903                           ;bmp280.c: 157: int32_t adc_T;
   904                           ;bmp280.c: 158: uint8_t t_read[3];
   905                           ;bmp280.c: 159: i2c1_readDataBlock(
   906                           ;bmp280.c: 160: 0b1110110,
   907                           ;bmp280.c: 161: 0xFA,
   908                           ;bmp280.c: 162: (char *)t_read,
   909                           ;bmp280.c: 163: 3);
   910                           
   911                           ;incstack = 0
   912  00F514  0EFA               	movlw	250
   913  00F516  6E03               	movwf	i2c1_readDataBlock@reg,c
   914  00F518  0E2F               	movlw	low bmp280_i2c_read_temp_i32@t_read
   915  00F51A  6E04               	movwf	i2c1_readDataBlock@data,c
   916  00F51C  0E00               	movlw	high bmp280_i2c_read_temp_i32@t_read
   917  00F51E  6E05               	movwf	i2c1_readDataBlock@data+1,c
   918  00F520  0E03               	movlw	3
   919  00F522  6E06               	movwf	i2c1_readDataBlock@len,c
   920  00F524  0E76               	movlw	118
   921  00F526  ECCE  F079         	call	_i2c1_readDataBlock
   922                           
   923                           ;bmp280.c: 164: adc_T = ((int32_t)t_read[0]) << 12 |
   924                           ;bmp280.c: 165: ((int32_t)t_read[1]) << 4 |
   925                           ;bmp280.c: 166: (t_read[2] >> 4) & 0x0F;
   926  00F52A  0060  F0C0  F011   	movff	bmp280_i2c_read_temp_i32@t_read+1,??_bmp280_i2c_read_temp_i32
   927  00F530  6A12               	clrf	(??_bmp280_i2c_read_temp_i32+1)& (0+255),c
   928  00F532  6A13               	clrf	(??_bmp280_i2c_read_temp_i32+2)& (0+255),c
   929  00F534  6A14               	clrf	(??_bmp280_i2c_read_temp_i32+3)& (0+255),c
   930  00F536  0E04               	movlw	4
   931  00F538                     u845:
   932  00F538  90D8               	bcf	16344,0,c
   933  00F53A  3611               	rlcf	??_bmp280_i2c_read_temp_i32,f,c
   934  00F53C  3612               	rlcf	??_bmp280_i2c_read_temp_i32+1,f,c
   935  00F53E  3613               	rlcf	??_bmp280_i2c_read_temp_i32+2,f,c
   936  00F540  3614               	rlcf	??_bmp280_i2c_read_temp_i32+3,f,c
   937  00F542  2EE8               	decfsz	16360,f,c
   938  00F544  D7F9               	goto	u845
   939  00F546  0060  F0BC  F015   	movff	bmp280_i2c_read_temp_i32@t_read,??_bmp280_i2c_read_temp_i32+4
   940  00F54C  6A16               	clrf	(??_bmp280_i2c_read_temp_i32+5)& (0+255),c
   941  00F54E  6A17               	clrf	(??_bmp280_i2c_read_temp_i32+6)& (0+255),c
   942  00F550  6A18               	clrf	(??_bmp280_i2c_read_temp_i32+7)& (0+255),c
   943  00F552  0E0C               	movlw	12
   944  00F554                     u855:
   945  00F554  90D8               	bcf	16344,0,c
   946  00F556  3615               	rlcf	??_bmp280_i2c_read_temp_i32+4,f,c
   947  00F558  3616               	rlcf	??_bmp280_i2c_read_temp_i32+5,f,c
   948  00F55A  3617               	rlcf	??_bmp280_i2c_read_temp_i32+6,f,c
   949  00F55C  3618               	rlcf	??_bmp280_i2c_read_temp_i32+7,f,c
   950  00F55E  2EE8               	decfsz	16360,f,c
   951  00F560  D7F9               	goto	u855
   952  00F562  5011               	movf	??_bmp280_i2c_read_temp_i32,w,c
   953  00F564  1015               	iorwf	??_bmp280_i2c_read_temp_i32+4,w,c
   954  00F566  6E19               	movwf	(??_bmp280_i2c_read_temp_i32+8)& (0+255),c
   955  00F568  5012               	movf	??_bmp280_i2c_read_temp_i32+1,w,c
   956  00F56A  1016               	iorwf	??_bmp280_i2c_read_temp_i32+5,w,c
   957  00F56C  6E1A               	movwf	(??_bmp280_i2c_read_temp_i32+9)& (0+255),c
   958  00F56E  5013               	movf	??_bmp280_i2c_read_temp_i32+2,w,c
   959  00F570  1017               	iorwf	??_bmp280_i2c_read_temp_i32+6,w,c
   960  00F572  6E1B               	movwf	(??_bmp280_i2c_read_temp_i32+10)& (0+255),c
   961  00F574  5014               	movf	??_bmp280_i2c_read_temp_i32+3,w,c
   962  00F576  1018               	iorwf	??_bmp280_i2c_read_temp_i32+7,w,c
   963  00F578  6E1C               	movwf	(??_bmp280_i2c_read_temp_i32+11)& (0+255),c
   964  00F57A  0060  F0C4  F01D   	movff	bmp280_i2c_read_temp_i32@t_read+2,??_bmp280_i2c_read_temp_i32+12
   965  00F580  3A1D               	swapf	??_bmp280_i2c_read_temp_i32+12,f,c
   966  00F582  0E0F               	movlw	15
   967  00F584  161D               	andwf	??_bmp280_i2c_read_temp_i32+12,f,c
   968  00F586  0E0F               	movlw	15
   969  00F588  161D               	andwf	??_bmp280_i2c_read_temp_i32+12,f,c
   970  00F58A  501D               	movf	??_bmp280_i2c_read_temp_i32+12,w,c
   971  00F58C  1019               	iorwf	??_bmp280_i2c_read_temp_i32+8,w,c
   972  00F58E  6E32               	movwf	bmp280_i2c_read_temp_i32@adc_T,c
   973  00F590  501A               	movf	??_bmp280_i2c_read_temp_i32+9,w,c
   974  00F592  6E33               	movwf	bmp280_i2c_read_temp_i32@adc_T+1,c
   975  00F594  501B               	movf	??_bmp280_i2c_read_temp_i32+10,w,c
   976  00F596  6E34               	movwf	bmp280_i2c_read_temp_i32@adc_T+2,c
   977  00F598  501C               	movf	??_bmp280_i2c_read_temp_i32+11,w,c
   978  00F59A  6E35               	movwf	bmp280_i2c_read_temp_i32@adc_T+3,c
   979                           
   980                           ;bmp280.c: 168: int32_t temp1;
   981                           ;bmp280.c: 169: int32_t temp2;
   982                           ;bmp280.c: 170: int32_t temp3;
   983                           ;bmp280.c: 171: int32_t T;
   984                           ;bmp280.c: 172: temp1 = ((((adc_T >> 3) - ((int32_t)bmp280_calib.dig_T1 << 1))) *
   985                           ;bmp280.c: 173: ((int32_t)bmp280_calib.dig_T2)) >> 11;
   986  00F59C  0E0B               	movlw	11
   987  00F59E  6E11               	movwf	??_bmp280_i2c_read_temp_i32& (0+255),c
   988  00F5A0  0100               	movlb	0	; () banked
   989  00F5A2  5160               	movf	_bmp280_calib& (0+255),w,b
   990  00F5A4  6E12               	movwf	(??_bmp280_i2c_read_temp_i32+1)& (0+255),c
   991  00F5A6  5161               	movf	(_bmp280_calib+1)& (0+255),w,b
   992  00F5A8  6E13               	movwf	(??_bmp280_i2c_read_temp_i32+2)& (0+255),c
   993  00F5AA  6A14               	clrf	(??_bmp280_i2c_read_temp_i32+3)& (0+255),c
   994  00F5AC  6A15               	clrf	(??_bmp280_i2c_read_temp_i32+4)& (0+255),c
   995  00F5AE  90D8               	bcf	16344,0,c
   996  00F5B0  3412               	rlcf	??_bmp280_i2c_read_temp_i32+1,w,c
   997  00F5B2  6E16               	movwf	(??_bmp280_i2c_read_temp_i32+5)& (0+255),c
   998  00F5B4  3413               	rlcf	??_bmp280_i2c_read_temp_i32+2,w,c
   999  00F5B6  6E17               	movwf	(??_bmp280_i2c_read_temp_i32+6)& (0+255),c
  1000  00F5B8  3414               	rlcf	??_bmp280_i2c_read_temp_i32+3,w,c
  1001  00F5BA  6E18               	movwf	(??_bmp280_i2c_read_temp_i32+7)& (0+255),c
  1002  00F5BC  3415               	rlcf	??_bmp280_i2c_read_temp_i32+4,w,c
  1003  00F5BE  6E19               	movwf	(??_bmp280_i2c_read_temp_i32+8)& (0+255),c
  1004  00F5C0  1E16               	comf	??_bmp280_i2c_read_temp_i32+5,f,c
  1005  00F5C2  1E17               	comf	??_bmp280_i2c_read_temp_i32+6,f,c
  1006  00F5C4  1E18               	comf	??_bmp280_i2c_read_temp_i32+7,f,c
  1007  00F5C6  1E19               	comf	??_bmp280_i2c_read_temp_i32+8,f,c
  1008  00F5C8  2A16               	incf	??_bmp280_i2c_read_temp_i32+5,f,c
  1009  00F5CA  0E00               	movlw	0
  1010  00F5CC  2217               	addwfc	??_bmp280_i2c_read_temp_i32+6,f,c
  1011  00F5CE  2218               	addwfc	??_bmp280_i2c_read_temp_i32+7,f,c
  1012  00F5D0  2219               	addwfc	??_bmp280_i2c_read_temp_i32+8,f,c
  1013  00F5D2  0E03               	movlw	3
  1014  00F5D4  6E1A               	movwf	(??_bmp280_i2c_read_temp_i32+9)& (0+255),c
  1015  00F5D6  0060  F0C8  F01B   	movff	bmp280_i2c_read_temp_i32@adc_T,??_bmp280_i2c_read_temp_i32+10
  1016  00F5DC  0060  F0CC  F01C   	movff	bmp280_i2c_read_temp_i32@adc_T+1,??_bmp280_i2c_read_temp_i32+11
  1017  00F5E2  0060  F0D0  F01D   	movff	bmp280_i2c_read_temp_i32@adc_T+2,??_bmp280_i2c_read_temp_i32+12
  1018  00F5E8  0060  F0D4  F01E   	movff	bmp280_i2c_read_temp_i32@adc_T+3,??_bmp280_i2c_read_temp_i32+13
  1019  00F5EE                     u865:
  1020  00F5EE  661A               	tstfsz	??_bmp280_i2c_read_temp_i32+9,c
  1021  00F5F0  D001               	goto	u866
  1022  00F5F2  D007               	goto	u867
  1023  00F5F4                     u866:
  1024  00F5F4  341E               	rlcf	??_bmp280_i2c_read_temp_i32+13,w,c
  1025  00F5F6  321E               	rrcf	??_bmp280_i2c_read_temp_i32+13,f,c
  1026  00F5F8  321D               	rrcf	??_bmp280_i2c_read_temp_i32+12,f,c
  1027  00F5FA  321C               	rrcf	??_bmp280_i2c_read_temp_i32+11,f,c
  1028  00F5FC  321B               	rrcf	??_bmp280_i2c_read_temp_i32+10,f,c
  1029  00F5FE  2E1A               	decfsz	??_bmp280_i2c_read_temp_i32+9,f,c
  1030  00F600  D7F6               	goto	u865
  1031  00F602                     u867:
  1032  00F602  5016               	movf	??_bmp280_i2c_read_temp_i32+5,w,c
  1033  00F604  241B               	addwf	??_bmp280_i2c_read_temp_i32+10,w,c
  1034  00F606  6E01               	movwf	___lmul@multiplier,c
  1035  00F608  5017               	movf	??_bmp280_i2c_read_temp_i32+6,w,c
  1036  00F60A  201C               	addwfc	??_bmp280_i2c_read_temp_i32+11,w,c
  1037  00F60C  6E02               	movwf	___lmul@multiplier+1,c
  1038  00F60E  5018               	movf	??_bmp280_i2c_read_temp_i32+7,w,c
  1039  00F610  201D               	addwfc	??_bmp280_i2c_read_temp_i32+12,w,c
  1040  00F612  6E03               	movwf	___lmul@multiplier+2,c
  1041  00F614  5019               	movf	??_bmp280_i2c_read_temp_i32+8,w,c
  1042  00F616  201E               	addwfc	??_bmp280_i2c_read_temp_i32+13,w,c
  1043  00F618  6E04               	movwf	___lmul@multiplier+3,c
  1044  00F61A  EE20  F062         	lfsr	2,_bmp280_calib+2
  1045  00F61E  006F FF78  F005    	movff	16350,___lmul@multiplicand
  1046  00F624  006F FF74  F006    	movff	16349,___lmul@multiplicand+1
  1047  00F62A  0E00               	movlw	0
  1048  00F62C  BE06               	btfsc	___lmul@multiplicand+1,7,c
  1049  00F62E  0EFF               	movlw	-1
  1050  00F630  6E07               	movwf	___lmul@multiplicand+2,c
  1051  00F632  6E08               	movwf	___lmul@multiplicand+3,c
  1052  00F634  EC9F  F079         	call	___lmul	;wreg free
  1053  00F638                     u875:
  1054  00F638  6611               	tstfsz	??_bmp280_i2c_read_temp_i32,c
  1055  00F63A  D001               	goto	u876
  1056  00F63C  D007               	goto	u877
  1057  00F63E                     u876:
  1058  00F63E  3404               	rlcf	?___lmul+3,w,c
  1059  00F640  3204               	rrcf	?___lmul+3,f,c
  1060  00F642  3203               	rrcf	?___lmul+2,f,c
  1061  00F644  3202               	rrcf	?___lmul+1,f,c
  1062  00F646  3201               	rrcf	?___lmul,f,c
  1063  00F648  2E11               	decfsz	??_bmp280_i2c_read_temp_i32,f,c
  1064  00F64A  D7F6               	goto	u875
  1065  00F64C                     u877:
  1066  00F64C  0060  F004  F01F   	movff	?___lmul,bmp280_i2c_read_temp_i32@temp1
  1067  00F652  0060  F008  F020   	movff	?___lmul+1,bmp280_i2c_read_temp_i32@temp1+1
  1068  00F658  0060  F00C  F021   	movff	?___lmul+2,bmp280_i2c_read_temp_i32@temp1+2
  1069  00F65E  0060  F010  F022   	movff	?___lmul+3,bmp280_i2c_read_temp_i32@temp1+3
  1070                           
  1071                           ;bmp280.c: 174: temp2 = (adc_T >> 4) - ((int32_t)bmp280_calib.dig_T1);
  1072  00F664  0100               	movlb	0	; () banked
  1073  00F666  5160               	movf	_bmp280_calib& (0+255),w,b
  1074  00F668  6E11               	movwf	??_bmp280_i2c_read_temp_i32& (0+255),c
  1075  00F66A  5161               	movf	(_bmp280_calib+1)& (0+255),w,b
  1076  00F66C  6E12               	movwf	(??_bmp280_i2c_read_temp_i32+1)& (0+255),c
  1077  00F66E  6A13               	clrf	(??_bmp280_i2c_read_temp_i32+2)& (0+255),c
  1078  00F670  6A14               	clrf	(??_bmp280_i2c_read_temp_i32+3)& (0+255),c
  1079  00F672  1E11               	comf	??_bmp280_i2c_read_temp_i32,f,c
  1080  00F674  1E12               	comf	??_bmp280_i2c_read_temp_i32+1,f,c
  1081  00F676  1E13               	comf	??_bmp280_i2c_read_temp_i32+2,f,c
  1082  00F678  1E14               	comf	??_bmp280_i2c_read_temp_i32+3,f,c
  1083  00F67A  2A11               	incf	??_bmp280_i2c_read_temp_i32,f,c
  1084  00F67C  0E00               	movlw	0
  1085  00F67E  2212               	addwfc	??_bmp280_i2c_read_temp_i32+1,f,c
  1086  00F680  2213               	addwfc	??_bmp280_i2c_read_temp_i32+2,f,c
  1087  00F682  2214               	addwfc	??_bmp280_i2c_read_temp_i32+3,f,c
  1088  00F684  0E04               	movlw	4
  1089  00F686  6E15               	movwf	(??_bmp280_i2c_read_temp_i32+4)& (0+255),c
  1090  00F688  0060  F0C8  F016   	movff	bmp280_i2c_read_temp_i32@adc_T,??_bmp280_i2c_read_temp_i32+5
  1091  00F68E  0060  F0CC  F017   	movff	bmp280_i2c_read_temp_i32@adc_T+1,??_bmp280_i2c_read_temp_i32+6
  1092  00F694  0060  F0D0  F018   	movff	bmp280_i2c_read_temp_i32@adc_T+2,??_bmp280_i2c_read_temp_i32+7
  1093  00F69A  0060  F0D4  F019   	movff	bmp280_i2c_read_temp_i32@adc_T+3,??_bmp280_i2c_read_temp_i32+8
  1094  00F6A0                     u885:
  1095  00F6A0  6615               	tstfsz	??_bmp280_i2c_read_temp_i32+4,c
  1096  00F6A2  D001               	goto	u886
  1097  00F6A4  D007               	goto	u887
  1098  00F6A6                     u886:
  1099  00F6A6  3419               	rlcf	??_bmp280_i2c_read_temp_i32+8,w,c
  1100  00F6A8  3219               	rrcf	??_bmp280_i2c_read_temp_i32+8,f,c
  1101  00F6AA  3218               	rrcf	??_bmp280_i2c_read_temp_i32+7,f,c
  1102  00F6AC  3217               	rrcf	??_bmp280_i2c_read_temp_i32+6,f,c
  1103  00F6AE  3216               	rrcf	??_bmp280_i2c_read_temp_i32+5,f,c
  1104  00F6B0  2E15               	decfsz	??_bmp280_i2c_read_temp_i32+4,f,c
  1105  00F6B2  D7F6               	goto	u885
  1106  00F6B4                     u887:
  1107  00F6B4  5011               	movf	??_bmp280_i2c_read_temp_i32,w,c
  1108  00F6B6  2416               	addwf	??_bmp280_i2c_read_temp_i32+5,w,c
  1109  00F6B8  6E36               	movwf	bmp280_i2c_read_temp_i32@temp2,c
  1110  00F6BA  5012               	movf	??_bmp280_i2c_read_temp_i32+1,w,c
  1111  00F6BC  2017               	addwfc	??_bmp280_i2c_read_temp_i32+6,w,c
  1112  00F6BE  6E37               	movwf	bmp280_i2c_read_temp_i32@temp2+1,c
  1113  00F6C0  5013               	movf	??_bmp280_i2c_read_temp_i32+2,w,c
  1114  00F6C2  2018               	addwfc	??_bmp280_i2c_read_temp_i32+7,w,c
  1115  00F6C4  6E38               	movwf	bmp280_i2c_read_temp_i32@temp2+2,c
  1116  00F6C6  5014               	movf	??_bmp280_i2c_read_temp_i32+3,w,c
  1117  00F6C8  2019               	addwfc	??_bmp280_i2c_read_temp_i32+8,w,c
  1118  00F6CA  6E39               	movwf	bmp280_i2c_read_temp_i32@temp2+3,c
  1119                           
  1120                           ;bmp280.c: 175: temp3 = (((temp2 * temp2) >> 12) * ((int32_t)bmp280_calib.dig_T3)) >> 14
      +                          ;
  1121  00F6CC  0E0C               	movlw	12
  1122  00F6CE  6E11               	movwf	??_bmp280_i2c_read_temp_i32& (0+255),c
  1123  00F6D0  0060  F0D8  F001   	movff	bmp280_i2c_read_temp_i32@temp2,___lmul@multiplier
  1124  00F6D6  0060  F0DC  F002   	movff	bmp280_i2c_read_temp_i32@temp2+1,___lmul@multiplier+1
  1125  00F6DC  0060  F0E0  F003   	movff	bmp280_i2c_read_temp_i32@temp2+2,___lmul@multiplier+2
  1126  00F6E2  0060  F0E4  F004   	movff	bmp280_i2c_read_temp_i32@temp2+3,___lmul@multiplier+3
  1127  00F6E8  0060  F0D8  F005   	movff	bmp280_i2c_read_temp_i32@temp2,___lmul@multiplicand
  1128  00F6EE  0060  F0DC  F006   	movff	bmp280_i2c_read_temp_i32@temp2+1,___lmul@multiplicand+1
  1129  00F6F4  0060  F0E0  F007   	movff	bmp280_i2c_read_temp_i32@temp2+2,___lmul@multiplicand+2
  1130  00F6FA  0060  F0E4  F008   	movff	bmp280_i2c_read_temp_i32@temp2+3,___lmul@multiplicand+3
  1131  00F700  EC9F  F079         	call	___lmul	;wreg free
  1132  00F704                     u895:
  1133  00F704  6611               	tstfsz	??_bmp280_i2c_read_temp_i32,c
  1134  00F706  D001               	goto	u896
  1135  00F708  D007               	goto	u897
  1136  00F70A                     u896:
  1137  00F70A  3404               	rlcf	?___lmul+3,w,c
  1138  00F70C  3204               	rrcf	?___lmul+3,f,c
  1139  00F70E  3203               	rrcf	?___lmul+2,f,c
  1140  00F710  3202               	rrcf	?___lmul+1,f,c
  1141  00F712  3201               	rrcf	?___lmul,f,c
  1142  00F714  2E11               	decfsz	??_bmp280_i2c_read_temp_i32,f,c
  1143  00F716  D7F6               	goto	u895
  1144  00F718                     u897:
  1145  00F718  0060  F004  F02B   	movff	?___lmul,_bmp280_i2c_read_temp_i32$1215
  1146  00F71E  0060  F008  F02C   	movff	?___lmul+1,_bmp280_i2c_read_temp_i32$1215+1
  1147  00F724  0060  F00C  F02D   	movff	?___lmul+2,_bmp280_i2c_read_temp_i32$1215+2
  1148  00F72A  0060  F010  F02E   	movff	?___lmul+3,_bmp280_i2c_read_temp_i32$1215+3
  1149                           
  1150                           ;bmp280.c: 175: temp3 = (((temp2 * temp2) >> 12) * ((int32_t)bmp280_calib.dig_T3)) >> 14
      +                          ;
  1151  00F730  0E0E               	movlw	14
  1152  00F732  6E11               	movwf	??_bmp280_i2c_read_temp_i32& (0+255),c
  1153  00F734  0060  F0AC  F001   	movff	_bmp280_i2c_read_temp_i32$1215,___lmul@multiplier
  1154  00F73A  0060  F0B0  F002   	movff	_bmp280_i2c_read_temp_i32$1215+1,___lmul@multiplier+1
  1155  00F740  0060  F0B4  F003   	movff	_bmp280_i2c_read_temp_i32$1215+2,___lmul@multiplier+2
  1156  00F746  0060  F0B8  F004   	movff	_bmp280_i2c_read_temp_i32$1215+3,___lmul@multiplier+3
  1157  00F74C  EE20  F064         	lfsr	2,_bmp280_calib+4
  1158  00F750  006F FF78  F005    	movff	16350,___lmul@multiplicand
  1159  00F756  006F FF74  F006    	movff	16349,___lmul@multiplicand+1
  1160  00F75C  0E00               	movlw	0
  1161  00F75E  BE06               	btfsc	___lmul@multiplicand+1,7,c
  1162  00F760  0EFF               	movlw	-1
  1163  00F762  6E07               	movwf	___lmul@multiplicand+2,c
  1164  00F764  6E08               	movwf	___lmul@multiplicand+3,c
  1165  00F766  EC9F  F079         	call	___lmul	;wreg free
  1166  00F76A                     u905:
  1167  00F76A  6611               	tstfsz	??_bmp280_i2c_read_temp_i32,c
  1168  00F76C  D001               	goto	u906
  1169  00F76E  D007               	goto	u907
  1170  00F770                     u906:
  1171  00F770  3404               	rlcf	?___lmul+3,w,c
  1172  00F772  3204               	rrcf	?___lmul+3,f,c
  1173  00F774  3203               	rrcf	?___lmul+2,f,c
  1174  00F776  3202               	rrcf	?___lmul+1,f,c
  1175  00F778  3201               	rrcf	?___lmul,f,c
  1176  00F77A  2E11               	decfsz	??_bmp280_i2c_read_temp_i32,f,c
  1177  00F77C  D7F6               	goto	u905
  1178  00F77E                     u907:
  1179  00F77E  0060  F004  F023   	movff	?___lmul,bmp280_i2c_read_temp_i32@temp3
  1180  00F784  0060  F008  F024   	movff	?___lmul+1,bmp280_i2c_read_temp_i32@temp3+1
  1181  00F78A  0060  F00C  F025   	movff	?___lmul+2,bmp280_i2c_read_temp_i32@temp3+2
  1182  00F790  0060  F010  F026   	movff	?___lmul+3,bmp280_i2c_read_temp_i32@temp3+3
  1183                           
  1184                           ;bmp280.c: 176: bmp280_t_fine = temp1 + temp3;
  1185  00F796  5023               	movf	bmp280_i2c_read_temp_i32@temp3,w,c
  1186  00F798  241F               	addwf	bmp280_i2c_read_temp_i32@temp1,w,c
  1187  00F79A  6E49               	movwf	_bmp280_t_fine,c
  1188  00F79C  5024               	movf	bmp280_i2c_read_temp_i32@temp3+1,w,c
  1189  00F79E  2020               	addwfc	bmp280_i2c_read_temp_i32@temp1+1,w,c
  1190  00F7A0  6E4A               	movwf	_bmp280_t_fine+1,c
  1191  00F7A2  5025               	movf	bmp280_i2c_read_temp_i32@temp3+2,w,c
  1192  00F7A4  2021               	addwfc	bmp280_i2c_read_temp_i32@temp1+2,w,c
  1193  00F7A6  6E4B               	movwf	_bmp280_t_fine+2,c
  1194  00F7A8  5026               	movf	bmp280_i2c_read_temp_i32@temp3+3,w,c
  1195  00F7AA  2022               	addwfc	bmp280_i2c_read_temp_i32@temp1+3,w,c
  1196  00F7AC  6E4C               	movwf	_bmp280_t_fine+3,c
  1197                           
  1198                           ;bmp280.c: 177: T = (bmp280_t_fine * 5 + 128) >> 8;
  1199  00F7AE  0060  F124  F001   	movff	_bmp280_t_fine,___lmul@multiplier
  1200  00F7B4  0060  F128  F002   	movff	_bmp280_t_fine+1,___lmul@multiplier+1
  1201  00F7BA  0060  F12C  F003   	movff	_bmp280_t_fine+2,___lmul@multiplier+2
  1202  00F7C0  0060  F130  F004   	movff	_bmp280_t_fine+3,___lmul@multiplier+3
  1203  00F7C6  0E05               	movlw	5
  1204  00F7C8  6E05               	movwf	___lmul@multiplicand,c
  1205  00F7CA  0E00               	movlw	0
  1206  00F7CC  6E06               	movwf	___lmul@multiplicand+1,c
  1207  00F7CE  0E00               	movlw	0
  1208  00F7D0  6E07               	movwf	___lmul@multiplicand+2,c
  1209  00F7D2  0E00               	movlw	0
  1210  00F7D4  6E08               	movwf	___lmul@multiplicand+3,c
  1211  00F7D6  EC9F  F079         	call	___lmul	;wreg free
  1212  00F7DA  0E80               	movlw	128
  1213  00F7DC  2401               	addwf	?___lmul,w,c
  1214  00F7DE  6E11               	movwf	??_bmp280_i2c_read_temp_i32& (0+255),c
  1215  00F7E0  0E00               	movlw	0
  1216  00F7E2  2002               	addwfc	?___lmul+1,w,c
  1217  00F7E4  6E12               	movwf	(??_bmp280_i2c_read_temp_i32+1)& (0+255),c
  1218  00F7E6  0E00               	movlw	0
  1219  00F7E8  2003               	addwfc	?___lmul+2,w,c
  1220  00F7EA  6E13               	movwf	(??_bmp280_i2c_read_temp_i32+2)& (0+255),c
  1221  00F7EC  0E00               	movlw	0
  1222  00F7EE  2004               	addwfc	?___lmul+3,w,c
  1223  00F7F0  6E14               	movwf	(??_bmp280_i2c_read_temp_i32+3)& (0+255),c
  1224  00F7F2  0060  F048  F011   	movff	??_bmp280_i2c_read_temp_i32+1,??_bmp280_i2c_read_temp_i32
  1225  00F7F8  0060  F04C  F012   	movff	??_bmp280_i2c_read_temp_i32+2,??_bmp280_i2c_read_temp_i32+1
  1226  00F7FE  0060  F050  F013   	movff	??_bmp280_i2c_read_temp_i32+3,??_bmp280_i2c_read_temp_i32+2
  1227  00F804  6A14               	clrf	??_bmp280_i2c_read_temp_i32+3,c
  1228  00F806  BE13               	btfsc	??_bmp280_i2c_read_temp_i32+2,7,c
  1229  00F808  6814               	setf	??_bmp280_i2c_read_temp_i32+3,c
  1230  00F80A  0060  F044  F027   	movff	??_bmp280_i2c_read_temp_i32,bmp280_i2c_read_temp_i32@T
  1231  00F810  0060  F048  F028   	movff	??_bmp280_i2c_read_temp_i32+1,bmp280_i2c_read_temp_i32@T+1
  1232  00F816  0060  F04C  F029   	movff	??_bmp280_i2c_read_temp_i32+2,bmp280_i2c_read_temp_i32@T+2
  1233  00F81C  0060  F050  F02A   	movff	??_bmp280_i2c_read_temp_i32+3,bmp280_i2c_read_temp_i32@T+3
  1234                           
  1235                           ;bmp280.c: 179: return T;
  1236  00F822  0060  F09C  F00D   	movff	bmp280_i2c_read_temp_i32@T,?_bmp280_i2c_read_temp_i32
  1237  00F828  0060  F0A0  F00E   	movff	bmp280_i2c_read_temp_i32@T+1,?_bmp280_i2c_read_temp_i32+1
  1238  00F82E  0060  F0A4  F00F   	movff	bmp280_i2c_read_temp_i32@T+2,?_bmp280_i2c_read_temp_i32+2
  1239  00F834  0060  F0A8  F010   	movff	bmp280_i2c_read_temp_i32@T+3,?_bmp280_i2c_read_temp_i32+3
  1240  00F83A  0012               	return	
  1241  00F83C                     __end_of_bmp280_i2c_read_temp_i32:
  1242                           	opt stack 0
  1243                           
  1244 ;; *************** function _bmp280_i2c_read_press_i32 *****************
  1245 ;; Defined at:
  1246 ;;		line 199 in file "bmp280.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  var1            4   60[COMRAM] long 
  1251 ;;  P               4   56[COMRAM] unsigned long 
  1252 ;;  var2            4   52[COMRAM] long 
  1253 ;;  adc_P           4   44[COMRAM] long 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  4   27[COMRAM] long 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:       37 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    3
  1270 ;; This function calls:
  1271 ;;		___lldiv
  1272 ;;		___lmul
  1273 ;;		_bmp280_i2c_read_press_raw
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text6
  1280  00F83C                     __ptext6:
  1281                           	opt stack 0
  1282  00F83C                     _bmp280_i2c_read_press_i32:
  1283                           	opt stack 27
  1284                           
  1285                           ;bmp280.c: 200: int32_t adc_P = bmp280_i2c_read_press_raw();
  1286                           
  1287                           ;incstack = 0
  1288  00F83C  EC45  F07A         	call	_bmp280_i2c_read_press_raw	;wreg free
  1289  00F840  0060  F020  F02D   	movff	?_bmp280_i2c_read_press_raw,bmp280_i2c_read_press_i32@adc_P
  1290  00F846  0060  F024  F02E   	movff	?_bmp280_i2c_read_press_raw+1,bmp280_i2c_read_press_i32@adc_P+1
  1291  00F84C  0060  F028  F02F   	movff	?_bmp280_i2c_read_press_raw+2,bmp280_i2c_read_press_i32@adc_P+2
  1292  00F852  0060  F02C  F030   	movff	?_bmp280_i2c_read_press_raw+3,bmp280_i2c_read_press_i32@adc_P+3
  1293                           
  1294                           ;bmp280.c: 202: int32_t var1;
  1295                           ;bmp280.c: 203: int32_t var2;
  1296                           ;bmp280.c: 204: uint32_t P;
  1297                           ;bmp280.c: 205: var1 = (((int32_t)bmp280_t_fine) >> 1) - (int32_t)64000;
  1298  00F858  0060  F124  F020   	movff	_bmp280_t_fine,??_bmp280_i2c_read_press_i32
  1299  00F85E  0060  F128  F021   	movff	_bmp280_t_fine+1,??_bmp280_i2c_read_press_i32+1
  1300  00F864  0060  F12C  F022   	movff	_bmp280_t_fine+2,??_bmp280_i2c_read_press_i32+2
  1301  00F86A  0060  F130  F023   	movff	_bmp280_t_fine+3,??_bmp280_i2c_read_press_i32+3
  1302  00F870  3423               	rlcf	??_bmp280_i2c_read_press_i32+3,w,c
  1303  00F872  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1304  00F874  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1305  00F876  3221               	rrcf	??_bmp280_i2c_read_press_i32+1,f,c
  1306  00F878  3220               	rrcf	??_bmp280_i2c_read_press_i32,f,c
  1307  00F87A  0E00               	movlw	0
  1308  00F87C  2420               	addwf	??_bmp280_i2c_read_press_i32,w,c
  1309  00F87E  6E3D               	movwf	bmp280_i2c_read_press_i32@var1,c
  1310  00F880  0E06               	movlw	6
  1311  00F882  2021               	addwfc	??_bmp280_i2c_read_press_i32+1,w,c
  1312  00F884  6E3E               	movwf	bmp280_i2c_read_press_i32@var1+1,c
  1313  00F886  0EFF               	movlw	255
  1314  00F888  2022               	addwfc	??_bmp280_i2c_read_press_i32+2,w,c
  1315  00F88A  6E3F               	movwf	bmp280_i2c_read_press_i32@var1+2,c
  1316  00F88C  0EFF               	movlw	255
  1317  00F88E  2023               	addwfc	??_bmp280_i2c_read_press_i32+3,w,c
  1318  00F890  6E40               	movwf	bmp280_i2c_read_press_i32@var1+3,c
  1319                           
  1320                           ;bmp280.c: 206: var2 = (((var1 >> 2) * (var1 >> 2)) >> 11 ) * ((int32_t)bmp280_calib.dig
      +                          _P6);
  1321  00F892  0E0B               	movlw	11
  1322  00F894  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1323  00F896  0E02               	movlw	2
  1324  00F898  6E21               	movwf	(??_bmp280_i2c_read_press_i32+1)& (0+255),c
  1325  00F89A  0060  F0F4  F022   	movff	bmp280_i2c_read_press_i32@var1,??_bmp280_i2c_read_press_i32+2
  1326  00F8A0  0060  F0F8  F023   	movff	bmp280_i2c_read_press_i32@var1+1,??_bmp280_i2c_read_press_i32+3
  1327  00F8A6  0060  F0FC  F024   	movff	bmp280_i2c_read_press_i32@var1+2,??_bmp280_i2c_read_press_i32+4
  1328  00F8AC  0060  F100  F025   	movff	bmp280_i2c_read_press_i32@var1+3,??_bmp280_i2c_read_press_i32+5
  1329  00F8B2                     u915:
  1330  00F8B2  6621               	tstfsz	??_bmp280_i2c_read_press_i32+1,c
  1331  00F8B4  D001               	goto	u916
  1332  00F8B6  D007               	goto	u917
  1333  00F8B8                     u916:
  1334  00F8B8  3425               	rlcf	??_bmp280_i2c_read_press_i32+5,w,c
  1335  00F8BA  3225               	rrcf	??_bmp280_i2c_read_press_i32+5,f,c
  1336  00F8BC  3224               	rrcf	??_bmp280_i2c_read_press_i32+4,f,c
  1337  00F8BE  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1338  00F8C0  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1339  00F8C2  2E21               	decfsz	??_bmp280_i2c_read_press_i32+1,f,c
  1340  00F8C4  D7F6               	goto	u915
  1341  00F8C6                     u917:
  1342  00F8C6  0060  F088  F001   	movff	??_bmp280_i2c_read_press_i32+2,___lmul@multiplier
  1343  00F8CC  0060  F08C  F002   	movff	??_bmp280_i2c_read_press_i32+3,___lmul@multiplier+1
  1344  00F8D2  0060  F090  F003   	movff	??_bmp280_i2c_read_press_i32+4,___lmul@multiplier+2
  1345  00F8D8  0060  F094  F004   	movff	??_bmp280_i2c_read_press_i32+5,___lmul@multiplier+3
  1346  00F8DE  0E02               	movlw	2
  1347  00F8E0  6E26               	movwf	(??_bmp280_i2c_read_press_i32+6)& (0+255),c
  1348  00F8E2  0060  F0F4  F027   	movff	bmp280_i2c_read_press_i32@var1,??_bmp280_i2c_read_press_i32+7
  1349  00F8E8  0060  F0F8  F028   	movff	bmp280_i2c_read_press_i32@var1+1,??_bmp280_i2c_read_press_i32+8
  1350  00F8EE  0060  F0FC  F029   	movff	bmp280_i2c_read_press_i32@var1+2,??_bmp280_i2c_read_press_i32+9
  1351  00F8F4  0060  F100  F02A   	movff	bmp280_i2c_read_press_i32@var1+3,??_bmp280_i2c_read_press_i32+10
  1352  00F8FA                     u925:
  1353  00F8FA  6626               	tstfsz	??_bmp280_i2c_read_press_i32+6,c
  1354  00F8FC  D001               	goto	u926
  1355  00F8FE  D007               	goto	u927
  1356  00F900                     u926:
  1357  00F900  342A               	rlcf	??_bmp280_i2c_read_press_i32+10,w,c
  1358  00F902  322A               	rrcf	??_bmp280_i2c_read_press_i32+10,f,c
  1359  00F904  3229               	rrcf	??_bmp280_i2c_read_press_i32+9,f,c
  1360  00F906  3228               	rrcf	??_bmp280_i2c_read_press_i32+8,f,c
  1361  00F908  3227               	rrcf	??_bmp280_i2c_read_press_i32+7,f,c
  1362  00F90A  2E26               	decfsz	??_bmp280_i2c_read_press_i32+6,f,c
  1363  00F90C  D7F6               	goto	u925
  1364  00F90E                     u927:
  1365  00F90E  0060  F09C  F005   	movff	??_bmp280_i2c_read_press_i32+7,___lmul@multiplicand
  1366  00F914  0060  F0A0  F006   	movff	??_bmp280_i2c_read_press_i32+8,___lmul@multiplicand+1
  1367  00F91A  0060  F0A4  F007   	movff	??_bmp280_i2c_read_press_i32+9,___lmul@multiplicand+2
  1368  00F920  0060  F0A8  F008   	movff	??_bmp280_i2c_read_press_i32+10,___lmul@multiplicand+3
  1369  00F926  EC9F  F079         	call	___lmul	;wreg free
  1370  00F92A                     u935:
  1371  00F92A  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1372  00F92C  D001               	goto	u936
  1373  00F92E  D007               	goto	u937
  1374  00F930                     u936:
  1375  00F930  3404               	rlcf	?___lmul+3,w,c
  1376  00F932  3204               	rrcf	?___lmul+3,f,c
  1377  00F934  3203               	rrcf	?___lmul+2,f,c
  1378  00F936  3202               	rrcf	?___lmul+1,f,c
  1379  00F938  3201               	rrcf	?___lmul,f,c
  1380  00F93A  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1381  00F93C  D7F6               	goto	u935
  1382  00F93E                     u937:
  1383  00F93E  0060  F004  F031   	movff	?___lmul,_bmp280_i2c_read_press_i32$1216
  1384  00F944  0060  F008  F032   	movff	?___lmul+1,_bmp280_i2c_read_press_i32$1216+1
  1385  00F94A  0060  F00C  F033   	movff	?___lmul+2,_bmp280_i2c_read_press_i32$1216+2
  1386  00F950  0060  F010  F034   	movff	?___lmul+3,_bmp280_i2c_read_press_i32$1216+3
  1387                           
  1388                           ;bmp280.c: 206: var2 = (((var1 >> 2) * (var1 >> 2)) >> 11 ) * ((int32_t)bmp280_calib.dig
      +                          _P6);
  1389  00F956  0060  F0C4  F001   	movff	_bmp280_i2c_read_press_i32$1216,___lmul@multiplier
  1390  00F95C  0060  F0C8  F002   	movff	_bmp280_i2c_read_press_i32$1216+1,___lmul@multiplier+1
  1391  00F962  0060  F0CC  F003   	movff	_bmp280_i2c_read_press_i32$1216+2,___lmul@multiplier+2
  1392  00F968  0060  F0D0  F004   	movff	_bmp280_i2c_read_press_i32$1216+3,___lmul@multiplier+3
  1393  00F96E  EE20  F070         	lfsr	2,_bmp280_calib+16
  1394  00F972  006F FF78  F005    	movff	16350,___lmul@multiplicand
  1395  00F978  006F FF74  F006    	movff	16349,___lmul@multiplicand+1
  1396  00F97E  0E00               	movlw	0
  1397  00F980  BE06               	btfsc	___lmul@multiplicand+1,7,c
  1398  00F982  0EFF               	movlw	-1
  1399  00F984  6E07               	movwf	___lmul@multiplicand+2,c
  1400  00F986  6E08               	movwf	___lmul@multiplicand+3,c
  1401  00F988  EC9F  F079         	call	___lmul	;wreg free
  1402  00F98C  0060  F004  F035   	movff	?___lmul,bmp280_i2c_read_press_i32@var2
  1403  00F992  0060  F008  F036   	movff	?___lmul+1,bmp280_i2c_read_press_i32@var2+1
  1404  00F998  0060  F00C  F037   	movff	?___lmul+2,bmp280_i2c_read_press_i32@var2+2
  1405  00F99E  0060  F010  F038   	movff	?___lmul+3,bmp280_i2c_read_press_i32@var2+3
  1406                           
  1407                           ;bmp280.c: 207: var2 = var2 + ((var1 * ((int32_t)bmp280_calib.dig_P5)) << 1);
  1408  00F9A4  EE20  F06E         	lfsr	2,_bmp280_calib+14
  1409  00F9A8  006F FF78  F001    	movff	16350,___lmul@multiplier
  1410  00F9AE  006F FF74  F002    	movff	16349,___lmul@multiplier+1
  1411  00F9B4  0E00               	movlw	0
  1412  00F9B6  BE02               	btfsc	___lmul@multiplier+1,7,c
  1413  00F9B8  0EFF               	movlw	-1
  1414  00F9BA  6E03               	movwf	___lmul@multiplier+2,c
  1415  00F9BC  6E04               	movwf	___lmul@multiplier+3,c
  1416  00F9BE  0060  F0F4  F005   	movff	bmp280_i2c_read_press_i32@var1,___lmul@multiplicand
  1417  00F9C4  0060  F0F8  F006   	movff	bmp280_i2c_read_press_i32@var1+1,___lmul@multiplicand+1
  1418  00F9CA  0060  F0FC  F007   	movff	bmp280_i2c_read_press_i32@var1+2,___lmul@multiplicand+2
  1419  00F9D0  0060  F100  F008   	movff	bmp280_i2c_read_press_i32@var1+3,___lmul@multiplicand+3
  1420  00F9D6  EC9F  F079         	call	___lmul	;wreg free
  1421  00F9DA  90D8               	bcf	16344,0,c
  1422  00F9DC  3401               	rlcf	?___lmul,w,c
  1423  00F9DE  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1424  00F9E0  3402               	rlcf	?___lmul+1,w,c
  1425  00F9E2  6E21               	movwf	(??_bmp280_i2c_read_press_i32+1)& (0+255),c
  1426  00F9E4  3403               	rlcf	?___lmul+2,w,c
  1427  00F9E6  6E22               	movwf	(??_bmp280_i2c_read_press_i32+2)& (0+255),c
  1428  00F9E8  3404               	rlcf	?___lmul+3,w,c
  1429  00F9EA  6E23               	movwf	(??_bmp280_i2c_read_press_i32+3)& (0+255),c
  1430  00F9EC  5035               	movf	bmp280_i2c_read_press_i32@var2,w,c
  1431  00F9EE  2420               	addwf	??_bmp280_i2c_read_press_i32,w,c
  1432  00F9F0  6E35               	movwf	bmp280_i2c_read_press_i32@var2,c
  1433  00F9F2  5036               	movf	bmp280_i2c_read_press_i32@var2+1,w,c
  1434  00F9F4  2021               	addwfc	??_bmp280_i2c_read_press_i32+1,w,c
  1435  00F9F6  6E36               	movwf	bmp280_i2c_read_press_i32@var2+1,c
  1436  00F9F8  5037               	movf	bmp280_i2c_read_press_i32@var2+2,w,c
  1437  00F9FA  2022               	addwfc	??_bmp280_i2c_read_press_i32+2,w,c
  1438  00F9FC  6E37               	movwf	bmp280_i2c_read_press_i32@var2+2,c
  1439  00F9FE  5038               	movf	bmp280_i2c_read_press_i32@var2+3,w,c
  1440  00FA00  2023               	addwfc	??_bmp280_i2c_read_press_i32+3,w,c
  1441  00FA02  6E38               	movwf	bmp280_i2c_read_press_i32@var2+3,c
  1442                           
  1443                           ;bmp280.c: 208: var2 = (var2 >> 2) + (((int32_t)bmp280_calib.dig_P4) << 16);
  1444  00FA04  0100               	movlb	0	; () banked
  1445  00FA06  516C               	movf	(_bmp280_calib+12)& (0+255),w,b
  1446  00FA08  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1447  00FA0A  516D               	movf	(_bmp280_calib+13)& (0+255),w,b
  1448  00FA0C  6E21               	movwf	(??_bmp280_i2c_read_press_i32+1)& (0+255),c
  1449  00FA0E  6A22               	clrf	(??_bmp280_i2c_read_press_i32+2)& (0+255),c
  1450  00FA10  6A23               	clrf	(??_bmp280_i2c_read_press_i32+3)& (0+255),c
  1451  00FA12  0060  F084  F023   	movff	??_bmp280_i2c_read_press_i32+1,??_bmp280_i2c_read_press_i32+3
  1452  00FA18  0060  F080  F022   	movff	??_bmp280_i2c_read_press_i32,??_bmp280_i2c_read_press_i32+2
  1453  00FA1E  6A21               	clrf	??_bmp280_i2c_read_press_i32+1,c
  1454  00FA20  6A20               	clrf	??_bmp280_i2c_read_press_i32,c
  1455  00FA22  0E02               	movlw	2
  1456  00FA24  6E24               	movwf	(??_bmp280_i2c_read_press_i32+4)& (0+255),c
  1457  00FA26  0060  F0D4  F025   	movff	bmp280_i2c_read_press_i32@var2,??_bmp280_i2c_read_press_i32+5
  1458  00FA2C  0060  F0D8  F026   	movff	bmp280_i2c_read_press_i32@var2+1,??_bmp280_i2c_read_press_i32+6
  1459  00FA32  0060  F0DC  F027   	movff	bmp280_i2c_read_press_i32@var2+2,??_bmp280_i2c_read_press_i32+7
  1460  00FA38  0060  F0E0  F028   	movff	bmp280_i2c_read_press_i32@var2+3,??_bmp280_i2c_read_press_i32+8
  1461  00FA3E                     u945:
  1462  00FA3E  6624               	tstfsz	??_bmp280_i2c_read_press_i32+4,c
  1463  00FA40  D001               	goto	u946
  1464  00FA42  D007               	goto	u947
  1465  00FA44                     u946:
  1466  00FA44  3428               	rlcf	??_bmp280_i2c_read_press_i32+8,w,c
  1467  00FA46  3228               	rrcf	??_bmp280_i2c_read_press_i32+8,f,c
  1468  00FA48  3227               	rrcf	??_bmp280_i2c_read_press_i32+7,f,c
  1469  00FA4A  3226               	rrcf	??_bmp280_i2c_read_press_i32+6,f,c
  1470  00FA4C  3225               	rrcf	??_bmp280_i2c_read_press_i32+5,f,c
  1471  00FA4E  2E24               	decfsz	??_bmp280_i2c_read_press_i32+4,f,c
  1472  00FA50  D7F6               	goto	u945
  1473  00FA52                     u947:
  1474  00FA52  5020               	movf	??_bmp280_i2c_read_press_i32,w,c
  1475  00FA54  2425               	addwf	??_bmp280_i2c_read_press_i32+5,w,c
  1476  00FA56  6E35               	movwf	bmp280_i2c_read_press_i32@var2,c
  1477  00FA58  5021               	movf	??_bmp280_i2c_read_press_i32+1,w,c
  1478  00FA5A  2026               	addwfc	??_bmp280_i2c_read_press_i32+6,w,c
  1479  00FA5C  6E36               	movwf	bmp280_i2c_read_press_i32@var2+1,c
  1480  00FA5E  5022               	movf	??_bmp280_i2c_read_press_i32+2,w,c
  1481  00FA60  2027               	addwfc	??_bmp280_i2c_read_press_i32+7,w,c
  1482  00FA62  6E37               	movwf	bmp280_i2c_read_press_i32@var2+2,c
  1483  00FA64  5023               	movf	??_bmp280_i2c_read_press_i32+3,w,c
  1484  00FA66  2028               	addwfc	??_bmp280_i2c_read_press_i32+8,w,c
  1485  00FA68  6E38               	movwf	bmp280_i2c_read_press_i32@var2+3,c
  1486                           
  1487                           ;bmp280.c: 209: var1 = (((bmp280_calib.dig_P3 * (((var1 >> 2) * (var1 >> 2)) >> 13 )) >>
      +                           3) +
  1488                           ;bmp280.c: 210: ((((int32_t)bmp280_calib.dig_P2) * var1) >> 1)) >> 18;
  1489  00FA6A  0E0D               	movlw	13
  1490  00FA6C  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1491  00FA6E  0E02               	movlw	2
  1492  00FA70  6E21               	movwf	(??_bmp280_i2c_read_press_i32+1)& (0+255),c
  1493  00FA72  0060  F0F4  F022   	movff	bmp280_i2c_read_press_i32@var1,??_bmp280_i2c_read_press_i32+2
  1494  00FA78  0060  F0F8  F023   	movff	bmp280_i2c_read_press_i32@var1+1,??_bmp280_i2c_read_press_i32+3
  1495  00FA7E  0060  F0FC  F024   	movff	bmp280_i2c_read_press_i32@var1+2,??_bmp280_i2c_read_press_i32+4
  1496  00FA84  0060  F100  F025   	movff	bmp280_i2c_read_press_i32@var1+3,??_bmp280_i2c_read_press_i32+5
  1497  00FA8A                     u955:
  1498  00FA8A  6621               	tstfsz	??_bmp280_i2c_read_press_i32+1,c
  1499  00FA8C  D001               	goto	u956
  1500  00FA8E  D007               	goto	u957
  1501  00FA90                     u956:
  1502  00FA90  3425               	rlcf	??_bmp280_i2c_read_press_i32+5,w,c
  1503  00FA92  3225               	rrcf	??_bmp280_i2c_read_press_i32+5,f,c
  1504  00FA94  3224               	rrcf	??_bmp280_i2c_read_press_i32+4,f,c
  1505  00FA96  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1506  00FA98  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1507  00FA9A  2E21               	decfsz	??_bmp280_i2c_read_press_i32+1,f,c
  1508  00FA9C  D7F6               	goto	u955
  1509  00FA9E                     u957:
  1510  00FA9E  0060  F088  F001   	movff	??_bmp280_i2c_read_press_i32+2,___lmul@multiplier
  1511  00FAA4  0060  F08C  F002   	movff	??_bmp280_i2c_read_press_i32+3,___lmul@multiplier+1
  1512  00FAAA  0060  F090  F003   	movff	??_bmp280_i2c_read_press_i32+4,___lmul@multiplier+2
  1513  00FAB0  0060  F094  F004   	movff	??_bmp280_i2c_read_press_i32+5,___lmul@multiplier+3
  1514  00FAB6  0E02               	movlw	2
  1515  00FAB8  6E26               	movwf	(??_bmp280_i2c_read_press_i32+6)& (0+255),c
  1516  00FABA  0060  F0F4  F027   	movff	bmp280_i2c_read_press_i32@var1,??_bmp280_i2c_read_press_i32+7
  1517  00FAC0  0060  F0F8  F028   	movff	bmp280_i2c_read_press_i32@var1+1,??_bmp280_i2c_read_press_i32+8
  1518  00FAC6  0060  F0FC  F029   	movff	bmp280_i2c_read_press_i32@var1+2,??_bmp280_i2c_read_press_i32+9
  1519  00FACC  0060  F100  F02A   	movff	bmp280_i2c_read_press_i32@var1+3,??_bmp280_i2c_read_press_i32+10
  1520  00FAD2                     u965:
  1521  00FAD2  6626               	tstfsz	??_bmp280_i2c_read_press_i32+6,c
  1522  00FAD4  D001               	goto	u966
  1523  00FAD6  D007               	goto	u967
  1524  00FAD8                     u966:
  1525  00FAD8  342A               	rlcf	??_bmp280_i2c_read_press_i32+10,w,c
  1526  00FADA  322A               	rrcf	??_bmp280_i2c_read_press_i32+10,f,c
  1527  00FADC  3229               	rrcf	??_bmp280_i2c_read_press_i32+9,f,c
  1528  00FADE  3228               	rrcf	??_bmp280_i2c_read_press_i32+8,f,c
  1529  00FAE0  3227               	rrcf	??_bmp280_i2c_read_press_i32+7,f,c
  1530  00FAE2  2E26               	decfsz	??_bmp280_i2c_read_press_i32+6,f,c
  1531  00FAE4  D7F6               	goto	u965
  1532  00FAE6                     u967:
  1533  00FAE6  0060  F09C  F005   	movff	??_bmp280_i2c_read_press_i32+7,___lmul@multiplicand
  1534  00FAEC  0060  F0A0  F006   	movff	??_bmp280_i2c_read_press_i32+8,___lmul@multiplicand+1
  1535  00FAF2  0060  F0A4  F007   	movff	??_bmp280_i2c_read_press_i32+9,___lmul@multiplicand+2
  1536  00FAF8  0060  F0A8  F008   	movff	??_bmp280_i2c_read_press_i32+10,___lmul@multiplicand+3
  1537  00FAFE  EC9F  F079         	call	___lmul	;wreg free
  1538  00FB02                     u975:
  1539  00FB02  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1540  00FB04  D001               	goto	u976
  1541  00FB06  D007               	goto	u977
  1542  00FB08                     u976:
  1543  00FB08  3404               	rlcf	?___lmul+3,w,c
  1544  00FB0A  3204               	rrcf	?___lmul+3,f,c
  1545  00FB0C  3203               	rrcf	?___lmul+2,f,c
  1546  00FB0E  3202               	rrcf	?___lmul+1,f,c
  1547  00FB10  3201               	rrcf	?___lmul,f,c
  1548  00FB12  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1549  00FB14  D7F6               	goto	u975
  1550  00FB16                     u977:
  1551  00FB16  0060  F004  F031   	movff	?___lmul,_bmp280_i2c_read_press_i32$1216
  1552  00FB1C  0060  F008  F032   	movff	?___lmul+1,_bmp280_i2c_read_press_i32$1216+1
  1553  00FB22  0060  F00C  F033   	movff	?___lmul+2,_bmp280_i2c_read_press_i32$1216+2
  1554  00FB28  0060  F010  F034   	movff	?___lmul+3,_bmp280_i2c_read_press_i32$1216+3
  1555                           
  1556                           ;bmp280.c: 209: var1 = (((bmp280_calib.dig_P3 * (((var1 >> 2) * (var1 >> 2)) >> 13 )) >>
      +                           3) +
  1557                           ;bmp280.c: 210: ((((int32_t)bmp280_calib.dig_P2) * var1) >> 1)) >> 18;
  1558  00FB2E  0E12               	movlw	18
  1559  00FB30  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1560  00FB32  0E03               	movlw	3
  1561  00FB34  6E21               	movwf	(??_bmp280_i2c_read_press_i32+1)& (0+255),c
  1562  00FB36  EE20  F06A         	lfsr	2,_bmp280_calib+10
  1563  00FB3A  006F FF78  F001    	movff	16350,___lmul@multiplier
  1564  00FB40  006F FF74  F002    	movff	16349,___lmul@multiplier+1
  1565  00FB46  0E00               	movlw	0
  1566  00FB48  BE02               	btfsc	___lmul@multiplier+1,7,c
  1567  00FB4A  0EFF               	movlw	-1
  1568  00FB4C  6E03               	movwf	___lmul@multiplier+2,c
  1569  00FB4E  6E04               	movwf	___lmul@multiplier+3,c
  1570  00FB50  0060  F0C4  F005   	movff	_bmp280_i2c_read_press_i32$1216,___lmul@multiplicand
  1571  00FB56  0060  F0C8  F006   	movff	_bmp280_i2c_read_press_i32$1216+1,___lmul@multiplicand+1
  1572  00FB5C  0060  F0CC  F007   	movff	_bmp280_i2c_read_press_i32$1216+2,___lmul@multiplicand+2
  1573  00FB62  0060  F0D0  F008   	movff	_bmp280_i2c_read_press_i32$1216+3,___lmul@multiplicand+3
  1574  00FB68  EC9F  F079         	call	___lmul	;wreg free
  1575  00FB6C  0060  F004  F022   	movff	?___lmul,??_bmp280_i2c_read_press_i32+2
  1576  00FB72  0060  F008  F023   	movff	?___lmul+1,??_bmp280_i2c_read_press_i32+3
  1577  00FB78  0060  F00C  F024   	movff	?___lmul+2,??_bmp280_i2c_read_press_i32+4
  1578  00FB7E  0060  F010  F025   	movff	?___lmul+3,??_bmp280_i2c_read_press_i32+5
  1579  00FB84                     u985:
  1580  00FB84  6621               	tstfsz	??_bmp280_i2c_read_press_i32+1,c
  1581  00FB86  D001               	goto	u986
  1582  00FB88  D007               	goto	u987
  1583  00FB8A                     u986:
  1584  00FB8A  3425               	rlcf	??_bmp280_i2c_read_press_i32+5,w,c
  1585  00FB8C  3225               	rrcf	??_bmp280_i2c_read_press_i32+5,f,c
  1586  00FB8E  3224               	rrcf	??_bmp280_i2c_read_press_i32+4,f,c
  1587  00FB90  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1588  00FB92  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1589  00FB94  2E21               	decfsz	??_bmp280_i2c_read_press_i32+1,f,c
  1590  00FB96  D7F6               	goto	u985
  1591  00FB98                     u987:
  1592  00FB98  EE20  F068         	lfsr	2,_bmp280_calib+8
  1593  00FB9C  006F FF78  F001    	movff	16350,___lmul@multiplier
  1594  00FBA2  006F FF74  F002    	movff	16349,___lmul@multiplier+1
  1595  00FBA8  0E00               	movlw	0
  1596  00FBAA  BE02               	btfsc	___lmul@multiplier+1,7,c
  1597  00FBAC  0EFF               	movlw	-1
  1598  00FBAE  6E03               	movwf	___lmul@multiplier+2,c
  1599  00FBB0  6E04               	movwf	___lmul@multiplier+3,c
  1600  00FBB2  0060  F0F4  F005   	movff	bmp280_i2c_read_press_i32@var1,___lmul@multiplicand
  1601  00FBB8  0060  F0F8  F006   	movff	bmp280_i2c_read_press_i32@var1+1,___lmul@multiplicand+1
  1602  00FBBE  0060  F0FC  F007   	movff	bmp280_i2c_read_press_i32@var1+2,___lmul@multiplicand+2
  1603  00FBC4  0060  F100  F008   	movff	bmp280_i2c_read_press_i32@var1+3,___lmul@multiplicand+3
  1604  00FBCA  EC9F  F079         	call	___lmul	;wreg free
  1605  00FBCE  3404               	rlcf	?___lmul+3,w,c
  1606  00FBD0  3204               	rrcf	?___lmul+3,f,c
  1607  00FBD2  3203               	rrcf	?___lmul+2,f,c
  1608  00FBD4  3202               	rrcf	?___lmul+1,f,c
  1609  00FBD6  3201               	rrcf	?___lmul,f,c
  1610  00FBD8  5001               	movf	?___lmul,w,c
  1611  00FBDA  2422               	addwf	??_bmp280_i2c_read_press_i32+2,w,c
  1612  00FBDC  6E26               	movwf	(??_bmp280_i2c_read_press_i32+6)& (0+255),c
  1613  00FBDE  5002               	movf	?___lmul+1,w,c
  1614  00FBE0  2023               	addwfc	??_bmp280_i2c_read_press_i32+3,w,c
  1615  00FBE2  6E27               	movwf	(??_bmp280_i2c_read_press_i32+7)& (0+255),c
  1616  00FBE4  5003               	movf	?___lmul+2,w,c
  1617  00FBE6  2024               	addwfc	??_bmp280_i2c_read_press_i32+4,w,c
  1618  00FBE8  6E28               	movwf	(??_bmp280_i2c_read_press_i32+8)& (0+255),c
  1619  00FBEA  5004               	movf	?___lmul+3,w,c
  1620  00FBEC  2025               	addwfc	??_bmp280_i2c_read_press_i32+5,w,c
  1621  00FBEE  6E29               	movwf	(??_bmp280_i2c_read_press_i32+9)& (0+255),c
  1622  00FBF0                     u995:
  1623  00FBF0  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1624  00FBF2  D001               	goto	u996
  1625  00FBF4  D007               	goto	u997
  1626  00FBF6                     u996:
  1627  00FBF6  3429               	rlcf	??_bmp280_i2c_read_press_i32+9,w,c
  1628  00FBF8  3229               	rrcf	??_bmp280_i2c_read_press_i32+9,f,c
  1629  00FBFA  3228               	rrcf	??_bmp280_i2c_read_press_i32+8,f,c
  1630  00FBFC  3227               	rrcf	??_bmp280_i2c_read_press_i32+7,f,c
  1631  00FBFE  3226               	rrcf	??_bmp280_i2c_read_press_i32+6,f,c
  1632  00FC00  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1633  00FC02  D7F6               	goto	u995
  1634  00FC04                     u997:
  1635  00FC04  0060  F098  F03D   	movff	??_bmp280_i2c_read_press_i32+6,bmp280_i2c_read_press_i32@var1
  1636  00FC0A  0060  F09C  F03E   	movff	??_bmp280_i2c_read_press_i32+7,bmp280_i2c_read_press_i32@var1+1
  1637  00FC10  0060  F0A0  F03F   	movff	??_bmp280_i2c_read_press_i32+8,bmp280_i2c_read_press_i32@var1+2
  1638  00FC16  0060  F0A4  F040   	movff	??_bmp280_i2c_read_press_i32+9,bmp280_i2c_read_press_i32@var1+3
  1639                           
  1640                           ;bmp280.c: 211: var1 = ((((32768 + var1)) * ((int32_t)bmp280_calib.dig_P1)) >> 15);
  1641  00FC1C  0E0F               	movlw	15
  1642  00FC1E  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1643  00FC20  0E00               	movlw	0
  1644  00FC22  243D               	addwf	bmp280_i2c_read_press_i32@var1,w,c
  1645  00FC24  6E01               	movwf	___lmul@multiplier,c
  1646  00FC26  0E80               	movlw	128
  1647  00FC28  203E               	addwfc	bmp280_i2c_read_press_i32@var1+1,w,c
  1648  00FC2A  6E02               	movwf	___lmul@multiplier+1,c
  1649  00FC2C  0E00               	movlw	0
  1650  00FC2E  203F               	addwfc	bmp280_i2c_read_press_i32@var1+2,w,c
  1651  00FC30  6E03               	movwf	___lmul@multiplier+2,c
  1652  00FC32  0E00               	movlw	0
  1653  00FC34  2040               	addwfc	bmp280_i2c_read_press_i32@var1+3,w,c
  1654  00FC36  6E04               	movwf	___lmul@multiplier+3,c
  1655  00FC38  0060  F198  F005   	movff	_bmp280_calib+6,___lmul@multiplicand
  1656  00FC3E  0060  F19C  F006   	movff	_bmp280_calib+7,___lmul@multiplicand+1
  1657  00FC44  6A07               	clrf	___lmul@multiplicand+2,c
  1658  00FC46  6A08               	clrf	___lmul@multiplicand+3,c
  1659  00FC48  EC9F  F079         	call	___lmul	;wreg free
  1660  00FC4C                     u1005:
  1661  00FC4C  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1662  00FC4E  D001               	goto	u1006
  1663  00FC50  D007               	goto	u1007
  1664  00FC52                     u1006:
  1665  00FC52  3404               	rlcf	?___lmul+3,w,c
  1666  00FC54  3204               	rrcf	?___lmul+3,f,c
  1667  00FC56  3203               	rrcf	?___lmul+2,f,c
  1668  00FC58  3202               	rrcf	?___lmul+1,f,c
  1669  00FC5A  3201               	rrcf	?___lmul,f,c
  1670  00FC5C  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1671  00FC5E  D7F6               	goto	u1005
  1672  00FC60                     u1007:
  1673  00FC60  0060  F004  F03D   	movff	?___lmul,bmp280_i2c_read_press_i32@var1
  1674  00FC66  0060  F008  F03E   	movff	?___lmul+1,bmp280_i2c_read_press_i32@var1+1
  1675  00FC6C  0060  F00C  F03F   	movff	?___lmul+2,bmp280_i2c_read_press_i32@var1+2
  1676  00FC72  0060  F010  F040   	movff	?___lmul+3,bmp280_i2c_read_press_i32@var1+3
  1677                           
  1678                           ;bmp280.c: 214: if (var1 == 0)
  1679  00FC78  503D               	movf	bmp280_i2c_read_press_i32@var1,w,c
  1680  00FC7A  103E               	iorwf	bmp280_i2c_read_press_i32@var1+1,w,c
  1681  00FC7C  103F               	iorwf	bmp280_i2c_read_press_i32@var1+2,w,c
  1682  00FC7E  1040               	iorwf	bmp280_i2c_read_press_i32@var1+3,w,c
  1683  00FC80  A4D8               	btfss	16344,2,c
  1684  00FC82  D009               	goto	l159
  1685                           
  1686                           ;bmp280.c: 215: return 0;
  1687  00FC84  0E00               	movlw	0
  1688  00FC86  6E1C               	movwf	?_bmp280_i2c_read_press_i32,c
  1689  00FC88  0E00               	movlw	0
  1690  00FC8A  6E1D               	movwf	?_bmp280_i2c_read_press_i32+1,c
  1691  00FC8C  0E00               	movlw	0
  1692  00FC8E  6E1E               	movwf	?_bmp280_i2c_read_press_i32+2,c
  1693  00FC90  0E00               	movlw	0
  1694  00FC92  6E1F               	movwf	?_bmp280_i2c_read_press_i32+3,c
  1695  00FC94  0012               	return	
  1696  00FC96                     l159:
  1697                           
  1698                           ;bmp280.c: 218: P = (((uint32_t)(((int32_t)1048576) - adc_P) - ((uint32_t)var2 >> 12))) 
      +                          * 3125;
  1699  00FC96  0060  F0D4  F020   	movff	bmp280_i2c_read_press_i32@var2,??_bmp280_i2c_read_press_i32
  1700  00FC9C  0060  F0D8  F021   	movff	bmp280_i2c_read_press_i32@var2+1,??_bmp280_i2c_read_press_i32+1
  1701  00FCA2  0060  F0DC  F022   	movff	bmp280_i2c_read_press_i32@var2+2,??_bmp280_i2c_read_press_i32+2
  1702  00FCA8  0060  F0E0  F023   	movff	bmp280_i2c_read_press_i32@var2+3,??_bmp280_i2c_read_press_i32+3
  1703  00FCAE  0E0D               	movlw	13
  1704  00FCB0  D005               	goto	u1020
  1705  00FCB2                     u1025:
  1706  00FCB2  90D8               	bcf	16344,0,c
  1707  00FCB4  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1708  00FCB6  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1709  00FCB8  3221               	rrcf	??_bmp280_i2c_read_press_i32+1,f,c
  1710  00FCBA  3220               	rrcf	??_bmp280_i2c_read_press_i32,f,c
  1711  00FCBC                     u1020:
  1712  00FCBC  2EE8               	decfsz	16360,f,c
  1713  00FCBE  D7F9               	goto	u1025
  1714  00FCC0  502D               	movf	bmp280_i2c_read_press_i32@adc_P,w,c
  1715  00FCC2  2420               	addwf	??_bmp280_i2c_read_press_i32,w,c
  1716  00FCC4  6E24               	movwf	(??_bmp280_i2c_read_press_i32+4)& (0+255),c
  1717  00FCC6  502E               	movf	bmp280_i2c_read_press_i32@adc_P+1,w,c
  1718  00FCC8  2021               	addwfc	??_bmp280_i2c_read_press_i32+1,w,c
  1719  00FCCA  6E25               	movwf	(??_bmp280_i2c_read_press_i32+5)& (0+255),c
  1720  00FCCC  502F               	movf	bmp280_i2c_read_press_i32@adc_P+2,w,c
  1721  00FCCE  2022               	addwfc	??_bmp280_i2c_read_press_i32+2,w,c
  1722  00FCD0  6E26               	movwf	(??_bmp280_i2c_read_press_i32+6)& (0+255),c
  1723  00FCD2  5030               	movf	bmp280_i2c_read_press_i32@adc_P+3,w,c
  1724  00FCD4  2023               	addwfc	??_bmp280_i2c_read_press_i32+3,w,c
  1725  00FCD6  6E27               	movwf	(??_bmp280_i2c_read_press_i32+7)& (0+255),c
  1726  00FCD8  1E24               	comf	??_bmp280_i2c_read_press_i32+4,f,c
  1727  00FCDA  1E25               	comf	??_bmp280_i2c_read_press_i32+5,f,c
  1728  00FCDC  1E26               	comf	??_bmp280_i2c_read_press_i32+6,f,c
  1729  00FCDE  1E27               	comf	??_bmp280_i2c_read_press_i32+7,f,c
  1730  00FCE0  2A24               	incf	??_bmp280_i2c_read_press_i32+4,f,c
  1731  00FCE2  0E00               	movlw	0
  1732  00FCE4  2225               	addwfc	??_bmp280_i2c_read_press_i32+5,f,c
  1733  00FCE6  2226               	addwfc	??_bmp280_i2c_read_press_i32+6,f,c
  1734  00FCE8  2227               	addwfc	??_bmp280_i2c_read_press_i32+7,f,c
  1735  00FCEA  0E00               	movlw	0
  1736  00FCEC  2424               	addwf	??_bmp280_i2c_read_press_i32+4,w,c
  1737  00FCEE  6E01               	movwf	___lmul@multiplier,c
  1738  00FCF0  0E00               	movlw	0
  1739  00FCF2  2025               	addwfc	??_bmp280_i2c_read_press_i32+5,w,c
  1740  00FCF4  6E02               	movwf	___lmul@multiplier+1,c
  1741  00FCF6  0E10               	movlw	16
  1742  00FCF8  2026               	addwfc	??_bmp280_i2c_read_press_i32+6,w,c
  1743  00FCFA  6E03               	movwf	___lmul@multiplier+2,c
  1744  00FCFC  0E00               	movlw	0
  1745  00FCFE  2027               	addwfc	??_bmp280_i2c_read_press_i32+7,w,c
  1746  00FD00  6E04               	movwf	___lmul@multiplier+3,c
  1747  00FD02  0E35               	movlw	53
  1748  00FD04  6E05               	movwf	___lmul@multiplicand,c
  1749  00FD06  0E0C               	movlw	12
  1750  00FD08  6E06               	movwf	___lmul@multiplicand+1,c
  1751  00FD0A  0E00               	movlw	0
  1752  00FD0C  6E07               	movwf	___lmul@multiplicand+2,c
  1753  00FD0E  0E00               	movlw	0
  1754  00FD10  6E08               	movwf	___lmul@multiplicand+3,c
  1755  00FD12  EC9F  F079         	call	___lmul	;wreg free
  1756  00FD16  0060  F004  F039   	movff	?___lmul,bmp280_i2c_read_press_i32@P
  1757  00FD1C  0060  F008  F03A   	movff	?___lmul+1,bmp280_i2c_read_press_i32@P+1
  1758  00FD22  0060  F00C  F03B   	movff	?___lmul+2,bmp280_i2c_read_press_i32@P+2
  1759  00FD28  0060  F010  F03C   	movff	?___lmul+3,bmp280_i2c_read_press_i32@P+3
  1760                           
  1761                           ;bmp280.c: 219: if (P < 0x80000000)
  1762  00FD2E  0E80               	movlw	128
  1763  00FD30  5C3C               	subwf	bmp280_i2c_read_press_i32@P+3,w,c
  1764  00FD32  B0D8               	btfsc	16344,0,c
  1765  00FD34  D024               	goto	l161
  1766                           
  1767                           ;bmp280.c: 220: P = (P << 1) / ((uint32_t)var1);
  1768  00FD36  90D8               	bcf	16344,0,c
  1769  00FD38  3439               	rlcf	bmp280_i2c_read_press_i32@P,w,c
  1770  00FD3A  6E01               	movwf	___lldiv@dividend,c
  1771  00FD3C  343A               	rlcf	bmp280_i2c_read_press_i32@P+1,w,c
  1772  00FD3E  6E02               	movwf	___lldiv@dividend+1,c
  1773  00FD40  343B               	rlcf	bmp280_i2c_read_press_i32@P+2,w,c
  1774  00FD42  6E03               	movwf	___lldiv@dividend+2,c
  1775  00FD44  343C               	rlcf	bmp280_i2c_read_press_i32@P+3,w,c
  1776  00FD46  6E04               	movwf	___lldiv@dividend+3,c
  1777  00FD48  0060  F0F4  F005   	movff	bmp280_i2c_read_press_i32@var1,___lldiv@divisor
  1778  00FD4E  0060  F0F8  F006   	movff	bmp280_i2c_read_press_i32@var1+1,___lldiv@divisor+1
  1779  00FD54  0060  F0FC  F007   	movff	bmp280_i2c_read_press_i32@var1+2,___lldiv@divisor+2
  1780  00FD5A  0060  F100  F008   	movff	bmp280_i2c_read_press_i32@var1+3,___lldiv@divisor+3
  1781  00FD60  EC00  F07A         	call	___lldiv	;wreg free
  1782  00FD64  0060  F004  F039   	movff	?___lldiv,bmp280_i2c_read_press_i32@P
  1783  00FD6A  0060  F008  F03A   	movff	?___lldiv+1,bmp280_i2c_read_press_i32@P+1
  1784  00FD70  0060  F00C  F03B   	movff	?___lldiv+2,bmp280_i2c_read_press_i32@P+2
  1785  00FD76  0060  F010  F03C   	movff	?___lldiv+3,bmp280_i2c_read_press_i32@P+3
  1786  00FD7C  D023               	goto	l162
  1787  00FD7E                     l161:
  1788                           
  1789                           ;bmp280.c: 221: else
  1790                           ;bmp280.c: 222: P = (P / (uint32_t)var1) * 2;
  1791  00FD7E  0060  F0E4  F001   	movff	bmp280_i2c_read_press_i32@P,___lldiv@dividend
  1792  00FD84  0060  F0E8  F002   	movff	bmp280_i2c_read_press_i32@P+1,___lldiv@dividend+1
  1793  00FD8A  0060  F0EC  F003   	movff	bmp280_i2c_read_press_i32@P+2,___lldiv@dividend+2
  1794  00FD90  0060  F0F0  F004   	movff	bmp280_i2c_read_press_i32@P+3,___lldiv@dividend+3
  1795  00FD96  0060  F0F4  F005   	movff	bmp280_i2c_read_press_i32@var1,___lldiv@divisor
  1796  00FD9C  0060  F0F8  F006   	movff	bmp280_i2c_read_press_i32@var1+1,___lldiv@divisor+1
  1797  00FDA2  0060  F0FC  F007   	movff	bmp280_i2c_read_press_i32@var1+2,___lldiv@divisor+2
  1798  00FDA8  0060  F100  F008   	movff	bmp280_i2c_read_press_i32@var1+3,___lldiv@divisor+3
  1799  00FDAE  EC00  F07A         	call	___lldiv	;wreg free
  1800  00FDB2  90D8               	bcf	16344,0,c
  1801  00FDB4  3401               	rlcf	?___lldiv,w,c
  1802  00FDB6  6E39               	movwf	bmp280_i2c_read_press_i32@P,c
  1803  00FDB8  3402               	rlcf	?___lldiv+1,w,c
  1804  00FDBA  6E3A               	movwf	bmp280_i2c_read_press_i32@P+1,c
  1805  00FDBC  3403               	rlcf	?___lldiv+2,w,c
  1806  00FDBE  6E3B               	movwf	bmp280_i2c_read_press_i32@P+2,c
  1807  00FDC0  3404               	rlcf	?___lldiv+3,w,c
  1808  00FDC2  6E3C               	movwf	bmp280_i2c_read_press_i32@P+3,c
  1809  00FDC4                     l162:
  1810                           
  1811                           ;bmp280.c: 224: var1 = (((int32_t)bmp280_calib.dig_P9) *
  1812                           ;bmp280.c: 225: ((int32_t)(((P >> 3) * (P >> 3)) >> 13))) >> 12;
  1813  00FDC4  0060  F0E4  F020   	movff	bmp280_i2c_read_press_i32@P,??_bmp280_i2c_read_press_i32
  1814  00FDCA  0060  F0E8  F021   	movff	bmp280_i2c_read_press_i32@P+1,??_bmp280_i2c_read_press_i32+1
  1815  00FDD0  0060  F0EC  F022   	movff	bmp280_i2c_read_press_i32@P+2,??_bmp280_i2c_read_press_i32+2
  1816  00FDD6  0060  F0F0  F023   	movff	bmp280_i2c_read_press_i32@P+3,??_bmp280_i2c_read_press_i32+3
  1817  00FDDC  0E04               	movlw	4
  1818  00FDDE  D005               	goto	u1040
  1819  00FDE0                     u1045:
  1820  00FDE0  90D8               	bcf	16344,0,c
  1821  00FDE2  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1822  00FDE4  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1823  00FDE6  3221               	rrcf	??_bmp280_i2c_read_press_i32+1,f,c
  1824  00FDE8  3220               	rrcf	??_bmp280_i2c_read_press_i32,f,c
  1825  00FDEA                     u1040:
  1826  00FDEA  2EE8               	decfsz	16360,f,c
  1827  00FDEC  D7F9               	goto	u1045
  1828  00FDEE  0060  F080  F001   	movff	??_bmp280_i2c_read_press_i32,___lmul@multiplier
  1829  00FDF4  0060  F084  F002   	movff	??_bmp280_i2c_read_press_i32+1,___lmul@multiplier+1
  1830  00FDFA  0060  F088  F003   	movff	??_bmp280_i2c_read_press_i32+2,___lmul@multiplier+2
  1831  00FE00  0060  F08C  F004   	movff	??_bmp280_i2c_read_press_i32+3,___lmul@multiplier+3
  1832  00FE06  0060  F0E4  F024   	movff	bmp280_i2c_read_press_i32@P,??_bmp280_i2c_read_press_i32+4
  1833  00FE0C  0060  F0E8  F025   	movff	bmp280_i2c_read_press_i32@P+1,??_bmp280_i2c_read_press_i32+5
  1834  00FE12  0060  F0EC  F026   	movff	bmp280_i2c_read_press_i32@P+2,??_bmp280_i2c_read_press_i32+6
  1835  00FE18  0060  F0F0  F027   	movff	bmp280_i2c_read_press_i32@P+3,??_bmp280_i2c_read_press_i32+7
  1836  00FE1E  0E04               	movlw	4
  1837  00FE20  D005               	goto	u1050
  1838  00FE22                     u1055:
  1839  00FE22  90D8               	bcf	16344,0,c
  1840  00FE24  3227               	rrcf	??_bmp280_i2c_read_press_i32+7,f,c
  1841  00FE26  3226               	rrcf	??_bmp280_i2c_read_press_i32+6,f,c
  1842  00FE28  3225               	rrcf	??_bmp280_i2c_read_press_i32+5,f,c
  1843  00FE2A  3224               	rrcf	??_bmp280_i2c_read_press_i32+4,f,c
  1844  00FE2C                     u1050:
  1845  00FE2C  2EE8               	decfsz	16360,f,c
  1846  00FE2E  D7F9               	goto	u1055
  1847  00FE30  0060  F090  F005   	movff	??_bmp280_i2c_read_press_i32+4,___lmul@multiplicand
  1848  00FE36  0060  F094  F006   	movff	??_bmp280_i2c_read_press_i32+5,___lmul@multiplicand+1
  1849  00FE3C  0060  F098  F007   	movff	??_bmp280_i2c_read_press_i32+6,___lmul@multiplicand+2
  1850  00FE42  0060  F09C  F008   	movff	??_bmp280_i2c_read_press_i32+7,___lmul@multiplicand+3
  1851  00FE48  EC9F  F079         	call	___lmul	;wreg free
  1852  00FE4C  0E0E               	movlw	14
  1853  00FE4E  D005               	goto	u1060
  1854  00FE50                     u1065:
  1855  00FE50  90D8               	bcf	16344,0,c
  1856  00FE52  3204               	rrcf	?___lmul+3,f,c
  1857  00FE54  3203               	rrcf	?___lmul+2,f,c
  1858  00FE56  3202               	rrcf	?___lmul+1,f,c
  1859  00FE58  3201               	rrcf	?___lmul,f,c
  1860  00FE5A                     u1060:
  1861  00FE5A  2EE8               	decfsz	16360,f,c
  1862  00FE5C  D7F9               	goto	u1065
  1863  00FE5E  0060  F004  F031   	movff	?___lmul,_bmp280_i2c_read_press_i32$1216
  1864  00FE64  0060  F008  F032   	movff	?___lmul+1,_bmp280_i2c_read_press_i32$1216+1
  1865  00FE6A  0060  F00C  F033   	movff	?___lmul+2,_bmp280_i2c_read_press_i32$1216+2
  1866  00FE70  0060  F010  F034   	movff	?___lmul+3,_bmp280_i2c_read_press_i32$1216+3
  1867                           
  1868                           ;bmp280.c: 224: var1 = (((int32_t)bmp280_calib.dig_P9) *
  1869                           ;bmp280.c: 225: ((int32_t)(((P >> 3) * (P >> 3)) >> 13))) >> 12;
  1870  00FE76  0E0C               	movlw	12
  1871  00FE78  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1872  00FE7A  EE20  F076         	lfsr	2,_bmp280_calib+22
  1873  00FE7E  006F FF78  F001    	movff	16350,___lmul@multiplier
  1874  00FE84  006F FF74  F002    	movff	16349,___lmul@multiplier+1
  1875  00FE8A  0E00               	movlw	0
  1876  00FE8C  BE02               	btfsc	___lmul@multiplier+1,7,c
  1877  00FE8E  0EFF               	movlw	-1
  1878  00FE90  6E03               	movwf	___lmul@multiplier+2,c
  1879  00FE92  6E04               	movwf	___lmul@multiplier+3,c
  1880  00FE94  0060  F0C4  F005   	movff	_bmp280_i2c_read_press_i32$1216,___lmul@multiplicand
  1881  00FE9A  0060  F0C8  F006   	movff	_bmp280_i2c_read_press_i32$1216+1,___lmul@multiplicand+1
  1882  00FEA0  0060  F0CC  F007   	movff	_bmp280_i2c_read_press_i32$1216+2,___lmul@multiplicand+2
  1883  00FEA6  0060  F0D0  F008   	movff	_bmp280_i2c_read_press_i32$1216+3,___lmul@multiplicand+3
  1884  00FEAC  EC9F  F079         	call	___lmul	;wreg free
  1885  00FEB0                     u1075:
  1886  00FEB0  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1887  00FEB2  D001               	goto	u1076
  1888  00FEB4  D007               	goto	u1077
  1889  00FEB6                     u1076:
  1890  00FEB6  3404               	rlcf	?___lmul+3,w,c
  1891  00FEB8  3204               	rrcf	?___lmul+3,f,c
  1892  00FEBA  3203               	rrcf	?___lmul+2,f,c
  1893  00FEBC  3202               	rrcf	?___lmul+1,f,c
  1894  00FEBE  3201               	rrcf	?___lmul,f,c
  1895  00FEC0  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1896  00FEC2  D7F6               	goto	u1075
  1897  00FEC4                     u1077:
  1898  00FEC4  0060  F004  F03D   	movff	?___lmul,bmp280_i2c_read_press_i32@var1
  1899  00FECA  0060  F008  F03E   	movff	?___lmul+1,bmp280_i2c_read_press_i32@var1+1
  1900  00FED0  0060  F00C  F03F   	movff	?___lmul+2,bmp280_i2c_read_press_i32@var1+2
  1901  00FED6  0060  F010  F040   	movff	?___lmul+3,bmp280_i2c_read_press_i32@var1+3
  1902                           
  1903                           ;bmp280.c: 226: var2 = (((int32_t)(P >> 2)) * ((int32_t)bmp280_calib.dig_P8)) >> 13;
  1904  00FEDC  0E0D               	movlw	13
  1905  00FEDE  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1906  00FEE0  0060  F0E4  F021   	movff	bmp280_i2c_read_press_i32@P,??_bmp280_i2c_read_press_i32+1
  1907  00FEE6  0060  F0E8  F022   	movff	bmp280_i2c_read_press_i32@P+1,??_bmp280_i2c_read_press_i32+2
  1908  00FEEC  0060  F0EC  F023   	movff	bmp280_i2c_read_press_i32@P+2,??_bmp280_i2c_read_press_i32+3
  1909  00FEF2  0060  F0F0  F024   	movff	bmp280_i2c_read_press_i32@P+3,??_bmp280_i2c_read_press_i32+4
  1910  00FEF8  0E03               	movlw	3
  1911  00FEFA  D005               	goto	u1080
  1912  00FEFC                     u1085:
  1913  00FEFC  90D8               	bcf	16344,0,c
  1914  00FEFE  3224               	rrcf	??_bmp280_i2c_read_press_i32+4,f,c
  1915  00FF00  3223               	rrcf	??_bmp280_i2c_read_press_i32+3,f,c
  1916  00FF02  3222               	rrcf	??_bmp280_i2c_read_press_i32+2,f,c
  1917  00FF04  3221               	rrcf	??_bmp280_i2c_read_press_i32+1,f,c
  1918  00FF06                     u1080:
  1919  00FF06  2EE8               	decfsz	16360,f,c
  1920  00FF08  D7F9               	goto	u1085
  1921  00FF0A  0060  F084  F001   	movff	??_bmp280_i2c_read_press_i32+1,___lmul@multiplier
  1922  00FF10  0060  F088  F002   	movff	??_bmp280_i2c_read_press_i32+2,___lmul@multiplier+1
  1923  00FF16  0060  F08C  F003   	movff	??_bmp280_i2c_read_press_i32+3,___lmul@multiplier+2
  1924  00FF1C  0060  F090  F004   	movff	??_bmp280_i2c_read_press_i32+4,___lmul@multiplier+3
  1925  00FF22  EE20  F074         	lfsr	2,_bmp280_calib+20
  1926  00FF26  006F FF78  F005    	movff	16350,___lmul@multiplicand
  1927  00FF2C  006F FF74  F006    	movff	16349,___lmul@multiplicand+1
  1928  00FF32  0E00               	movlw	0
  1929  00FF34  BE06               	btfsc	___lmul@multiplicand+1,7,c
  1930  00FF36  0EFF               	movlw	-1
  1931  00FF38  6E07               	movwf	___lmul@multiplicand+2,c
  1932  00FF3A  6E08               	movwf	___lmul@multiplicand+3,c
  1933  00FF3C  EC9F  F079         	call	___lmul	;wreg free
  1934  00FF40                     u1095:
  1935  00FF40  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1936  00FF42  D001               	goto	u1096
  1937  00FF44  D007               	goto	u1097
  1938  00FF46                     u1096:
  1939  00FF46  3404               	rlcf	?___lmul+3,w,c
  1940  00FF48  3204               	rrcf	?___lmul+3,f,c
  1941  00FF4A  3203               	rrcf	?___lmul+2,f,c
  1942  00FF4C  3202               	rrcf	?___lmul+1,f,c
  1943  00FF4E  3201               	rrcf	?___lmul,f,c
  1944  00FF50  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1945  00FF52  D7F6               	goto	u1095
  1946  00FF54                     u1097:
  1947  00FF54  0060  F004  F035   	movff	?___lmul,bmp280_i2c_read_press_i32@var2
  1948  00FF5A  0060  F008  F036   	movff	?___lmul+1,bmp280_i2c_read_press_i32@var2+1
  1949  00FF60  0060  F00C  F037   	movff	?___lmul+2,bmp280_i2c_read_press_i32@var2+2
  1950  00FF66  0060  F010  F038   	movff	?___lmul+3,bmp280_i2c_read_press_i32@var2+3
  1951                           
  1952                           ;bmp280.c: 227: P = (uint32_t)((int32_t)P + ((var1 + var2 + bmp280_calib.dig_P7) >> 4));
  1953  00FF6C  0E04               	movlw	4
  1954  00FF6E  6E20               	movwf	??_bmp280_i2c_read_press_i32& (0+255),c
  1955  00FF70  0060  F1C8  F021   	movff	_bmp280_calib+18,??_bmp280_i2c_read_press_i32+1
  1956  00FF76  0060  F1CC  F022   	movff	_bmp280_calib+19,??_bmp280_i2c_read_press_i32+2
  1957  00FF7C  0E00               	movlw	0
  1958  00FF7E  BE22               	btfsc	(??_bmp280_i2c_read_press_i32+2)& (0+255),7,c
  1959  00FF80  0EFF               	movlw	255
  1960  00FF82  6E23               	movwf	(??_bmp280_i2c_read_press_i32+3)& (0+255),c
  1961  00FF84  6E24               	movwf	(??_bmp280_i2c_read_press_i32+4)& (0+255),c
  1962  00FF86  503D               	movf	bmp280_i2c_read_press_i32@var1,w,c
  1963  00FF88  2421               	addwf	??_bmp280_i2c_read_press_i32+1,w,c
  1964  00FF8A  6E25               	movwf	(??_bmp280_i2c_read_press_i32+5)& (0+255),c
  1965  00FF8C  503E               	movf	bmp280_i2c_read_press_i32@var1+1,w,c
  1966  00FF8E  2022               	addwfc	??_bmp280_i2c_read_press_i32+2,w,c
  1967  00FF90  6E26               	movwf	(??_bmp280_i2c_read_press_i32+6)& (0+255),c
  1968  00FF92  503F               	movf	bmp280_i2c_read_press_i32@var1+2,w,c
  1969  00FF94  2023               	addwfc	??_bmp280_i2c_read_press_i32+3,w,c
  1970  00FF96  6E27               	movwf	(??_bmp280_i2c_read_press_i32+7)& (0+255),c
  1971  00FF98  5040               	movf	bmp280_i2c_read_press_i32@var1+3,w,c
  1972  00FF9A  2024               	addwfc	??_bmp280_i2c_read_press_i32+4,w,c
  1973  00FF9C  6E28               	movwf	(??_bmp280_i2c_read_press_i32+8)& (0+255),c
  1974  00FF9E  5035               	movf	bmp280_i2c_read_press_i32@var2,w,c
  1975  00FFA0  2425               	addwf	??_bmp280_i2c_read_press_i32+5,w,c
  1976  00FFA2  6E29               	movwf	(??_bmp280_i2c_read_press_i32+9)& (0+255),c
  1977  00FFA4  5036               	movf	bmp280_i2c_read_press_i32@var2+1,w,c
  1978  00FFA6  2026               	addwfc	??_bmp280_i2c_read_press_i32+6,w,c
  1979  00FFA8  6E2A               	movwf	(??_bmp280_i2c_read_press_i32+10)& (0+255),c
  1980  00FFAA  5037               	movf	bmp280_i2c_read_press_i32@var2+2,w,c
  1981  00FFAC  2027               	addwfc	??_bmp280_i2c_read_press_i32+7,w,c
  1982  00FFAE  6E2B               	movwf	(??_bmp280_i2c_read_press_i32+11)& (0+255),c
  1983  00FFB0  5038               	movf	bmp280_i2c_read_press_i32@var2+3,w,c
  1984  00FFB2  2028               	addwfc	??_bmp280_i2c_read_press_i32+8,w,c
  1985  00FFB4  6E2C               	movwf	(??_bmp280_i2c_read_press_i32+12)& (0+255),c
  1986  00FFB6                     u1105:
  1987  00FFB6  6620               	tstfsz	??_bmp280_i2c_read_press_i32,c
  1988  00FFB8  D001               	goto	u1106
  1989  00FFBA  D007               	goto	u1107
  1990  00FFBC                     u1106:
  1991  00FFBC  342C               	rlcf	??_bmp280_i2c_read_press_i32+12,w,c
  1992  00FFBE  322C               	rrcf	??_bmp280_i2c_read_press_i32+12,f,c
  1993  00FFC0  322B               	rrcf	??_bmp280_i2c_read_press_i32+11,f,c
  1994  00FFC2  322A               	rrcf	??_bmp280_i2c_read_press_i32+10,f,c
  1995  00FFC4  3229               	rrcf	??_bmp280_i2c_read_press_i32+9,f,c
  1996  00FFC6  2E20               	decfsz	??_bmp280_i2c_read_press_i32,f,c
  1997  00FFC8  D7F6               	goto	u1105
  1998  00FFCA                     u1107:
  1999  00FFCA  5039               	movf	bmp280_i2c_read_press_i32@P,w,c
  2000  00FFCC  2429               	addwf	??_bmp280_i2c_read_press_i32+9,w,c
  2001  00FFCE  6E39               	movwf	bmp280_i2c_read_press_i32@P,c
  2002  00FFD0  503A               	movf	bmp280_i2c_read_press_i32@P+1,w,c
  2003  00FFD2  202A               	addwfc	??_bmp280_i2c_read_press_i32+10,w,c
  2004  00FFD4  6E3A               	movwf	bmp280_i2c_read_press_i32@P+1,c
  2005  00FFD6  503B               	movf	bmp280_i2c_read_press_i32@P+2,w,c
  2006  00FFD8  202B               	addwfc	??_bmp280_i2c_read_press_i32+11,w,c
  2007  00FFDA  6E3B               	movwf	bmp280_i2c_read_press_i32@P+2,c
  2008  00FFDC  503C               	movf	bmp280_i2c_read_press_i32@P+3,w,c
  2009  00FFDE  202C               	addwfc	??_bmp280_i2c_read_press_i32+12,w,c
  2010  00FFE0  6E3C               	movwf	bmp280_i2c_read_press_i32@P+3,c
  2011                           
  2012                           ;bmp280.c: 229: return P;
  2013  00FFE2  0060  F0E4  F01C   	movff	bmp280_i2c_read_press_i32@P,?_bmp280_i2c_read_press_i32
  2014  00FFE8  0060  F0E8  F01D   	movff	bmp280_i2c_read_press_i32@P+1,?_bmp280_i2c_read_press_i32+1
  2015  00FFEE  0060  F0EC  F01E   	movff	bmp280_i2c_read_press_i32@P+2,?_bmp280_i2c_read_press_i32+2
  2016  00FFF4  0060  F0F0  F01F   	movff	bmp280_i2c_read_press_i32@P+3,?_bmp280_i2c_read_press_i32+3
  2017  00FFFA  0012               	return	
  2018  00FFFC                     __end_of_bmp280_i2c_read_press_i32:
  2019                           	opt stack 0
  2020                           
  2021 ;; *************** function _bmp280_i2c_read_press_raw *****************
  2022 ;; Defined at:
  2023 ;;		line 182 in file "bmp280.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  p_read          3   24[COMRAM] unsigned char [3]
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  4    7[COMRAM] long 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:       20 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    2
  2044 ;; This function calls:
  2045 ;;		_i2c1_readDataBlock
  2046 ;; This function is called by:
  2047 ;;		_bmp280_i2c_read_press_i32
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text7
  2052  00F48A                     __ptext7:
  2053                           	opt stack 0
  2054  00F48A                     _bmp280_i2c_read_press_raw:
  2055                           	opt stack 27
  2056                           
  2057                           ;bmp280.c: 185: uint8_t p_read[3];
  2058                           ;bmp280.c: 186: i2c1_readDataBlock(
  2059                           ;bmp280.c: 187: 0b1110110,
  2060                           ;bmp280.c: 188: 0xF7,
  2061                           ;bmp280.c: 189: (char *)p_read,
  2062                           ;bmp280.c: 190: 3);
  2063                           
  2064                           ;incstack = 0
  2065  00F48A  0EF7               	movlw	247
  2066  00F48C  6E03               	movwf	i2c1_readDataBlock@reg,c
  2067  00F48E  0E19               	movlw	low bmp280_i2c_read_press_raw@p_read
  2068  00F490  6E04               	movwf	i2c1_readDataBlock@data,c
  2069  00F492  0E00               	movlw	high bmp280_i2c_read_press_raw@p_read
  2070  00F494  6E05               	movwf	i2c1_readDataBlock@data+1,c
  2071  00F496  0E03               	movlw	3
  2072  00F498  6E06               	movwf	i2c1_readDataBlock@len,c
  2073  00F49A  0E76               	movlw	118
  2074  00F49C  ECCE  F079         	call	_i2c1_readDataBlock
  2075                           
  2076                           ;bmp280.c: 191: return ((int32_t)p_read[0]) << 12 |
  2077                           ;bmp280.c: 192: ((int32_t)p_read[1]) << 4 |
  2078                           ;bmp280.c: 193: (p_read[2] >> 4) & 0x0F;
  2079  00F4A0  0060  F068  F00C   	movff	bmp280_i2c_read_press_raw@p_read+1,??_bmp280_i2c_read_press_raw
  2080  00F4A6  6A0D               	clrf	(??_bmp280_i2c_read_press_raw+1)& (0+255),c
  2081  00F4A8  6A0E               	clrf	(??_bmp280_i2c_read_press_raw+2)& (0+255),c
  2082  00F4AA  6A0F               	clrf	(??_bmp280_i2c_read_press_raw+3)& (0+255),c
  2083  00F4AC  0E04               	movlw	4
  2084  00F4AE                     u755:
  2085  00F4AE  90D8               	bcf	16344,0,c
  2086  00F4B0  360C               	rlcf	??_bmp280_i2c_read_press_raw,f,c
  2087  00F4B2  360D               	rlcf	??_bmp280_i2c_read_press_raw+1,f,c
  2088  00F4B4  360E               	rlcf	??_bmp280_i2c_read_press_raw+2,f,c
  2089  00F4B6  360F               	rlcf	??_bmp280_i2c_read_press_raw+3,f,c
  2090  00F4B8  2EE8               	decfsz	16360,f,c
  2091  00F4BA  D7F9               	goto	u755
  2092  00F4BC  0060  F064  F010   	movff	bmp280_i2c_read_press_raw@p_read,??_bmp280_i2c_read_press_raw+4
  2093  00F4C2  6A11               	clrf	(??_bmp280_i2c_read_press_raw+5)& (0+255),c
  2094  00F4C4  6A12               	clrf	(??_bmp280_i2c_read_press_raw+6)& (0+255),c
  2095  00F4C6  6A13               	clrf	(??_bmp280_i2c_read_press_raw+7)& (0+255),c
  2096  00F4C8  0E0C               	movlw	12
  2097  00F4CA                     u765:
  2098  00F4CA  90D8               	bcf	16344,0,c
  2099  00F4CC  3610               	rlcf	??_bmp280_i2c_read_press_raw+4,f,c
  2100  00F4CE  3611               	rlcf	??_bmp280_i2c_read_press_raw+5,f,c
  2101  00F4D0  3612               	rlcf	??_bmp280_i2c_read_press_raw+6,f,c
  2102  00F4D2  3613               	rlcf	??_bmp280_i2c_read_press_raw+7,f,c
  2103  00F4D4  2EE8               	decfsz	16360,f,c
  2104  00F4D6  D7F9               	goto	u765
  2105  00F4D8  500C               	movf	??_bmp280_i2c_read_press_raw,w,c
  2106  00F4DA  1010               	iorwf	??_bmp280_i2c_read_press_raw+4,w,c
  2107  00F4DC  6E14               	movwf	(??_bmp280_i2c_read_press_raw+8)& (0+255),c
  2108  00F4DE  500D               	movf	??_bmp280_i2c_read_press_raw+1,w,c
  2109  00F4E0  1011               	iorwf	??_bmp280_i2c_read_press_raw+5,w,c
  2110  00F4E2  6E15               	movwf	(??_bmp280_i2c_read_press_raw+9)& (0+255),c
  2111  00F4E4  500E               	movf	??_bmp280_i2c_read_press_raw+2,w,c
  2112  00F4E6  1012               	iorwf	??_bmp280_i2c_read_press_raw+6,w,c
  2113  00F4E8  6E16               	movwf	(??_bmp280_i2c_read_press_raw+10)& (0+255),c
  2114  00F4EA  500F               	movf	??_bmp280_i2c_read_press_raw+3,w,c
  2115  00F4EC  1013               	iorwf	??_bmp280_i2c_read_press_raw+7,w,c
  2116  00F4EE  6E17               	movwf	(??_bmp280_i2c_read_press_raw+11)& (0+255),c
  2117  00F4F0  0060  F06C  F018   	movff	bmp280_i2c_read_press_raw@p_read+2,??_bmp280_i2c_read_press_raw+12
  2118  00F4F6  3A18               	swapf	??_bmp280_i2c_read_press_raw+12,f,c
  2119  00F4F8  0E0F               	movlw	15
  2120  00F4FA  1618               	andwf	??_bmp280_i2c_read_press_raw+12,f,c
  2121  00F4FC  0E0F               	movlw	15
  2122  00F4FE  1618               	andwf	??_bmp280_i2c_read_press_raw+12,f,c
  2123  00F500  5018               	movf	??_bmp280_i2c_read_press_raw+12,w,c
  2124  00F502  1014               	iorwf	??_bmp280_i2c_read_press_raw+8,w,c
  2125  00F504  6E08               	movwf	?_bmp280_i2c_read_press_raw,c
  2126  00F506  5015               	movf	??_bmp280_i2c_read_press_raw+9,w,c
  2127  00F508  6E09               	movwf	?_bmp280_i2c_read_press_raw+1,c
  2128  00F50A  5016               	movf	??_bmp280_i2c_read_press_raw+10,w,c
  2129  00F50C  6E0A               	movwf	?_bmp280_i2c_read_press_raw+2,c
  2130  00F50E  5017               	movf	??_bmp280_i2c_read_press_raw+11,w,c
  2131  00F510  6E0B               	movwf	?_bmp280_i2c_read_press_raw+3,c
  2132  00F512  0012               	return	
  2133  00F514                     __end_of_bmp280_i2c_read_press_raw:
  2134                           	opt stack 0
  2135                           
  2136 ;; *************** function ___lmul *****************
  2137 ;; Defined at:
  2138 ;;		line 15 in file "D:\Software\Microchip\xc8\v1.45\sources\common\Umul32.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  multiplier      4    0[COMRAM] unsigned long 
  2141 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  product         4    8[COMRAM] unsigned long 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  4    0[COMRAM] unsigned long 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:       12 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_bmp280_i2c_read_temp_i32
  2163 ;;		_bmp280_i2c_read_press_i32
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text8
  2168  00F33E                     __ptext8:
  2169                           	opt stack 0
  2170  00F33E                     ___lmul:
  2171                           	opt stack 29
  2172                           
  2173                           ;incstack = 0
  2174  00F33E  0E00               	movlw	0
  2175  00F340  6E09               	movwf	___lmul@product,c
  2176  00F342  0E00               	movlw	0
  2177  00F344  6E0A               	movwf	___lmul@product+1,c
  2178  00F346  0E00               	movlw	0
  2179  00F348  6E0B               	movwf	___lmul@product+2,c
  2180  00F34A  0E00               	movlw	0
  2181  00F34C  6E0C               	movwf	___lmul@product+3,c
  2182  00F34E  A001               	btfss	___lmul@multiplier,0,c
  2183  00F350  D008               	goto	l352
  2184  00F352  5005               	movf	___lmul@multiplicand,w,c
  2185  00F354  2609               	addwf	___lmul@product,f,c
  2186  00F356  5006               	movf	___lmul@multiplicand+1,w,c
  2187  00F358  220A               	addwfc	___lmul@product+1,f,c
  2188  00F35A  5007               	movf	___lmul@multiplicand+2,w,c
  2189  00F35C  220B               	addwfc	___lmul@product+2,f,c
  2190  00F35E  5008               	movf	___lmul@multiplicand+3,w,c
  2191  00F360  220C               	addwfc	___lmul@product+3,f,c
  2192  00F362                     l352:
  2193  00F362  90D8               	bcf	16344,0,c
  2194  00F364  3605               	rlcf	___lmul@multiplicand,f,c
  2195  00F366  3606               	rlcf	___lmul@multiplicand+1,f,c
  2196  00F368  3607               	rlcf	___lmul@multiplicand+2,f,c
  2197  00F36A  3608               	rlcf	___lmul@multiplicand+3,f,c
  2198  00F36C  90D8               	bcf	16344,0,c
  2199  00F36E  3204               	rrcf	___lmul@multiplier+3,f,c
  2200  00F370  3203               	rrcf	___lmul@multiplier+2,f,c
  2201  00F372  3202               	rrcf	___lmul@multiplier+1,f,c
  2202  00F374  3201               	rrcf	___lmul@multiplier,f,c
  2203  00F376  5001               	movf	___lmul@multiplier,w,c
  2204  00F378  1002               	iorwf	___lmul@multiplier+1,w,c
  2205  00F37A  1003               	iorwf	___lmul@multiplier+2,w,c
  2206  00F37C  1004               	iorwf	___lmul@multiplier+3,w,c
  2207  00F37E  A4D8               	btfss	16344,2,c
  2208  00F380  D7E6               	goto	l351
  2209  00F382  0060  F024  F001   	movff	___lmul@product,?___lmul
  2210  00F388  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
  2211  00F38E  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
  2212  00F394  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
  2213  00F39A  0012               	return		;funcret
  2214  00F39C                     __end_of___lmul:
  2215                           	opt stack 0
  2216                           
  2217 ;; *************** function ___lldiv *****************
  2218 ;; Defined at:
  2219 ;;		line 8 in file "D:\Software\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  dividend        4    0[COMRAM] unsigned long 
  2222 ;;  divisor         4    4[COMRAM] unsigned long 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  quotient        4    8[COMRAM] unsigned long 
  2225 ;;  counter         1   12[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  4    0[COMRAM] unsigned long 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:       13 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_bmp280_i2c_read_press_i32
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text9
  2249  00F400                     __ptext9:
  2250                           	opt stack 0
  2251  00F400                     ___lldiv:
  2252                           	opt stack 29
  2253                           
  2254                           ;incstack = 0
  2255  00F400  0E00               	movlw	0
  2256  00F402  6E09               	movwf	___lldiv@quotient,c
  2257  00F404  0E00               	movlw	0
  2258  00F406  6E0A               	movwf	___lldiv@quotient+1,c
  2259  00F408  0E00               	movlw	0
  2260  00F40A  6E0B               	movwf	___lldiv@quotient+2,c
  2261  00F40C  0E00               	movlw	0
  2262  00F40E  6E0C               	movwf	___lldiv@quotient+3,c
  2263  00F410  5005               	movf	___lldiv@divisor,w,c
  2264  00F412  1006               	iorwf	___lldiv@divisor+1,w,c
  2265  00F414  1007               	iorwf	___lldiv@divisor+2,w,c
  2266  00F416  1008               	iorwf	___lldiv@divisor+3,w,c
  2267  00F418  B4D8               	btfsc	16344,2,c
  2268  00F41A  D02A               	goto	l695
  2269  00F41C  0E01               	movlw	1
  2270  00F41E  6E0D               	movwf	___lldiv@counter,c
  2271  00F420  D006               	goto	l690
  2272  00F422  90D8               	bcf	16344,0,c
  2273  00F424  3605               	rlcf	___lldiv@divisor,f,c
  2274  00F426  3606               	rlcf	___lldiv@divisor+1,f,c
  2275  00F428  3607               	rlcf	___lldiv@divisor+2,f,c
  2276  00F42A  3608               	rlcf	___lldiv@divisor+3,f,c
  2277  00F42C  2A0D               	incf	___lldiv@counter,f,c
  2278  00F42E                     l690:
  2279  00F42E  AE08               	btfss	___lldiv@divisor+3,7,c
  2280  00F430  D7F8               	goto	l691
  2281  00F432                     u800:
  2282  00F432  90D8               	bcf	16344,0,c
  2283  00F434  3609               	rlcf	___lldiv@quotient,f,c
  2284  00F436  360A               	rlcf	___lldiv@quotient+1,f,c
  2285  00F438  360B               	rlcf	___lldiv@quotient+2,f,c
  2286  00F43A  360C               	rlcf	___lldiv@quotient+3,f,c
  2287  00F43C  5005               	movf	___lldiv@divisor,w,c
  2288  00F43E  5C01               	subwf	___lldiv@dividend,w,c
  2289  00F440  5006               	movf	___lldiv@divisor+1,w,c
  2290  00F442  5802               	subwfb	___lldiv@dividend+1,w,c
  2291  00F444  5007               	movf	___lldiv@divisor+2,w,c
  2292  00F446  5803               	subwfb	___lldiv@dividend+2,w,c
  2293  00F448  5008               	movf	___lldiv@divisor+3,w,c
  2294  00F44A  5804               	subwfb	___lldiv@dividend+3,w,c
  2295  00F44C  A0D8               	btfss	16344,0,c
  2296  00F44E  D009               	goto	l694
  2297  00F450  5005               	movf	___lldiv@divisor,w,c
  2298  00F452  5E01               	subwf	___lldiv@dividend,f,c
  2299  00F454  5006               	movf	___lldiv@divisor+1,w,c
  2300  00F456  5A02               	subwfb	___lldiv@dividend+1,f,c
  2301  00F458  5007               	movf	___lldiv@divisor+2,w,c
  2302  00F45A  5A03               	subwfb	___lldiv@dividend+2,f,c
  2303  00F45C  5008               	movf	___lldiv@divisor+3,w,c
  2304  00F45E  5A04               	subwfb	___lldiv@dividend+3,f,c
  2305  00F460  8009               	bsf	___lldiv@quotient,0,c
  2306  00F462                     l694:
  2307  00F462  90D8               	bcf	16344,0,c
  2308  00F464  3208               	rrcf	___lldiv@divisor+3,f,c
  2309  00F466  3207               	rrcf	___lldiv@divisor+2,f,c
  2310  00F468  3206               	rrcf	___lldiv@divisor+1,f,c
  2311  00F46A  3205               	rrcf	___lldiv@divisor,f,c
  2312  00F46C  2E0D               	decfsz	___lldiv@counter,f,c
  2313  00F46E  D7E1               	goto	u800
  2314  00F470                     l695:
  2315  00F470  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
  2316  00F476  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
  2317  00F47C  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
  2318  00F482  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
  2319  00F488  0012               	return		;funcret
  2320  00F48A                     __end_of___lldiv:
  2321                           	opt stack 0
  2322                           
  2323 ;; *************** function _bmp280_i2c_init *****************
  2324 ;; Defined at:
  2325 ;;		line 16 in file "bmp280.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		_i2c1_getLastError
  2348 ;;		_i2c1_readDataBlock
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text10
  2355  00F07A                     __ptext10:
  2356                           	opt stack 0
  2357  00F07A                     _bmp280_i2c_init:
  2358                           	opt stack 28
  2359                           
  2360                           ;bmp280.c: 17: i2c1_readDataBlock(
  2361                           ;bmp280.c: 18: 0b1110110,
  2362                           ;bmp280.c: 19: 0x88,
  2363                           ;bmp280.c: 20: (char *)(&bmp280_calib),
  2364                           ;bmp280.c: 21: 24);
  2365                           
  2366                           ;incstack = 0
  2367  00F07A  0E88               	movlw	136
  2368  00F07C  6E03               	movwf	i2c1_readDataBlock@reg,c
  2369  00F07E  0E60               	movlw	low _bmp280_calib
  2370  00F080  6E04               	movwf	i2c1_readDataBlock@data,c
  2371  00F082  0E00               	movlw	high _bmp280_calib
  2372  00F084  6E05               	movwf	i2c1_readDataBlock@data+1,c
  2373  00F086  0E18               	movlw	24
  2374  00F088  6E06               	movwf	i2c1_readDataBlock@len,c
  2375  00F08A  0E76               	movlw	118
  2376  00F08C  ECCE  F079         	call	_i2c1_readDataBlock
  2377                           
  2378                           ;bmp280.c: 22: return i2c1_getLastError() == I2C1_GOOD;
  2379                           ;	Return value of _bmp280_i2c_init is never used
  2380  00F090  ECFF  F077         	call	_i2c1_getLastError	;wreg free
  2381  00F094  0012               	return	
  2382  00F096                     __end_of_bmp280_i2c_init:
  2383                           	opt stack 0
  2384                           
  2385 ;; *************** function _i2c1_readDataBlock *****************
  2386 ;; Defined at:
  2387 ;;		line 294 in file "mcc_generated_files/i2c1.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  address         1    wreg     unsigned char 
  2390 ;;  reg             1    2[COMRAM] unsigned char 
  2391 ;;  data            2    3[COMRAM] PTR unsigned char 
  2392 ;;		 -> bmp280_i2c_read_press_raw@p_read(3), bmp280_i2c_read_temp_i32@t_read(3), bmp280_calib(24), 
  2393 ;;  len             1    5[COMRAM] unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  address         1    6[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        5 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		_I2C1_Initialize
  2414 ;;		_receiveByte
  2415 ;;		_sendByte
  2416 ;;		_wait4BusFree
  2417 ;;		_wait4MDRSetcount
  2418 ;;		_wait4Start
  2419 ;;		_wait4Stop
  2420 ;; This function is called by:
  2421 ;;		_bmp280_i2c_init
  2422 ;;		_bmp280_i2c_read_temp_i32
  2423 ;;		_bmp280_i2c_read_press_raw
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text11
  2428  00F39C                     __ptext11:
  2429                           	opt stack 0
  2430  00F39C                     _i2c1_readDataBlock:
  2431                           	opt stack 28
  2432                           
  2433                           ;incstack = 0
  2434                           ;i2c1_readDataBlock@address stored from wreg
  2435  00F39C  6E07               	movwf	i2c1_readDataBlock@address,c
  2436                           
  2437                           ;i2c1.c: 296: I2C1_Initialize();
  2438  00F39E  ECA1  F078         	call	_I2C1_Initialize	;wreg free
  2439                           
  2440                           ;i2c1.c: 297: I2C1ADB1 = (uint8_t)(address<<1);
  2441  00F3A2  5007               	movf	i2c1_readDataBlock@address,w,c
  2442  00F3A4  2407               	addwf	i2c1_readDataBlock@address,w,c
  2443  00F3A6  013D               	movlb	61	; () banked
  2444  00F3A8  6F6E               	movwf	110,b	;volatile
  2445                           
  2446                           ; BSR set to: 61
  2447                           ;i2c1.c: 298: wait4BusFree();
  2448  00F3AA  EC16  F078         	call	_wait4BusFree	;wreg free
  2449                           
  2450                           ;i2c1.c: 299: I2C1CNT = 1;
  2451  00F3AE  0E01               	movlw	1
  2452  00F3B0  013D               	movlb	61	; () banked
  2453  00F3B2  6F6C               	movwf	108,b	;volatile
  2454                           
  2455                           ; BSR set to: 61
  2456                           ;i2c1.c: 300: I2C1CON0bits.RSEN = 1;
  2457  00F3B4  8D73               	bsf	115,6,b	;volatile
  2458                           
  2459                           ; BSR set to: 61
  2460                           ;i2c1.c: 301: I2C1CON0bits.S = 1;
  2461  00F3B6  8B73               	bsf	115,5,b	;volatile
  2462                           
  2463                           ; BSR set to: 61
  2464                           ;i2c1.c: 302: wait4Start();
  2465  00F3B8  EC23  F078         	call	_wait4Start	;wreg free
  2466                           
  2467                           ;i2c1.c: 303: sendByte(reg);
  2468  00F3BC  5003               	movf	i2c1_readDataBlock@reg,w,c
  2469  00F3BE  EC7D  F078         	call	_sendByte
  2470                           
  2471                           ;i2c1.c: 304: wait4MDRSetcount(len);
  2472  00F3C2  5006               	movf	i2c1_readDataBlock@len,w,c
  2473  00F3C4  EC8F  F078         	call	_wait4MDRSetcount
  2474                           
  2475                           ;i2c1.c: 305: address = (uint8_t)(address<<1);
  2476  00F3C8  5007               	movf	i2c1_readDataBlock@address,w,c
  2477  00F3CA  2407               	addwf	i2c1_readDataBlock@address,w,c
  2478  00F3CC  6E07               	movwf	i2c1_readDataBlock@address,c
  2479                           
  2480                           ;i2c1.c: 306: I2C1ADB1 = (uint8_t)(address| 0x01);
  2481  00F3CE  5007               	movf	i2c1_readDataBlock@address,w,c
  2482  00F3D0  0901               	iorlw	1
  2483  00F3D2  013D               	movlb	61	; () banked
  2484  00F3D4  6F6E               	movwf	110,b	;volatile
  2485                           
  2486                           ; BSR set to: 61
  2487                           ;i2c1.c: 307: I2C1CON0bits.S = 1;
  2488  00F3D6  8B73               	bsf	115,5,b	;volatile
  2489                           
  2490                           ; BSR set to: 61
  2491                           ;i2c1.c: 308: I2C1CON0bits.RSEN = 0;
  2492  00F3D8  9D73               	bcf	115,6,b	;volatile
  2493                           
  2494                           ;i2c1.c: 309: while(len--)
  2495  00F3DA  D00B               	goto	l330
  2496  00F3DC                     
  2497                           ;i2c1.c: 310: {
  2498                           ;i2c1.c: 311: *data++ = receiveByte();
  2499                           
  2500                           ; BSR set to: 61
  2501  00F3DC  EC4B  F078         	call	_receiveByte	;wreg free
  2502  00F3E0  0060  F013  FFD9   	movff	i2c1_readDataBlock@data,16345
  2503  00F3E6  0060  F017  FFDA   	movff	i2c1_readDataBlock@data+1,16346
  2504  00F3EC  6EDF               	movwf	16351,c
  2505  00F3EE  4A04               	infsnz	i2c1_readDataBlock@data,f,c
  2506  00F3F0  2A05               	incf	i2c1_readDataBlock@data+1,f,c
  2507  00F3F2                     l330:
  2508  00F3F2  0606               	decf	i2c1_readDataBlock@len,f,c
  2509  00F3F4  2806               	incf	i2c1_readDataBlock@len,w,c
  2510  00F3F6  A4D8               	btfss	16344,2,c
  2511  00F3F8  D7F1               	goto	l331
  2512                           
  2513                           ;i2c1.c: 312: }
  2514                           ;i2c1.c: 313: wait4Stop();
  2515  00F3FA  EC30  F078         	call	_wait4Stop	;wreg free
  2516  00F3FE  0012               	return		;funcret
  2517  00F400                     __end_of_i2c1_readDataBlock:
  2518                           	opt stack 0
  2519                           
  2520 ;; *************** function _wait4Stop *****************
  2521 ;; Defined at:
  2522 ;;		line 162 in file "mcc_generated_files/i2c1.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  waitCount       1    0[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        1 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_i2c1_write1ByteRegister
  2546 ;;		_i2c1_read1ByteRegister
  2547 ;;		_i2c1_readDataBlock
  2548 ;;		_i2c1_write2ByteRegister
  2549 ;;		_i2c1_writeNBytes
  2550 ;;		_i2c1_read2ByteRegister
  2551 ;;		_i2c1_readNBytes
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text12
  2556  00F060                     __ptext12:
  2557                           	opt stack 0
  2558  00F060                     _wait4Stop:
  2559                           	opt stack 28
  2560                           
  2561                           ;i2c1.c: 164: uint8_t waitCount = 255;
  2562                           
  2563                           ;incstack = 0
  2564  00F060  6801               	setf	wait4Stop@waitCount,c
  2565                           
  2566                           ;i2c1.c: 165: if(lastError == I2C1_GOOD)
  2567  00F062  504D               	movf	_lastError,w,c
  2568  00F064  A4D8               	btfss	16344,2,c
  2569  00F066  0012               	return	
  2570  00F068  D003               	goto	l1537
  2571  00F06A                     l296:
  2572                           
  2573                           ;i2c1.c: 168: {
  2574                           ;i2c1.c: 169: if(I2C1PIRbits.PCIF)
  2575  00F06A  013D               	movlb	61	; () banked
  2576  00F06C  B579               	btfsc	121,2,b	;volatile
  2577  00F06E  0012               	return	
  2578  00F070                     l1537:
  2579                           
  2580                           ; BSR set to: 61
  2581                           ;i2c1.c: 173: else
  2582                           ;i2c1.c: 174: {
  2583                           ;i2c1.c: 175: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2584                           
  2585                           ; BSR set to: 61
  2586                           ;i2c1.c: 172: }
  2587  00F070  2E01               	decfsz	wait4Stop@waitCount,f,c
  2588  00F072  D7FB               	goto	l296
  2589                           
  2590                           ;i2c1.c: 176: }
  2591                           ;i2c1.c: 177: }
  2592                           ;i2c1.c: 178: lastError = I2C1_FAIL_TIMEOUT;
  2593  00F074  0E01               	movlw	1
  2594  00F076  6E4D               	movwf	_lastError,c
  2595  00F078  0012               	return	
  2596  00F07A                     __end_of_wait4Stop:
  2597                           	opt stack 0
  2598                           
  2599 ;; *************** function _wait4Start *****************
  2600 ;; Defined at:
  2601 ;;		line 80 in file "mcc_generated_files/i2c1.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  waitCount       1    0[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_i2c1_write1ByteRegister
  2625 ;;		_i2c1_read1ByteRegister
  2626 ;;		_i2c1_readDataBlock
  2627 ;;		_i2c1_write2ByteRegister
  2628 ;;		_i2c1_writeNBytes
  2629 ;;		_i2c1_read2ByteRegister
  2630 ;;		_i2c1_readNBytes
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text13
  2635  00F046                     __ptext13:
  2636                           	opt stack 0
  2637  00F046                     _wait4Start:
  2638                           	opt stack 28
  2639                           
  2640                           ;i2c1.c: 82: uint8_t waitCount = 255;
  2641                           
  2642                           ;incstack = 0
  2643  00F046  6801               	setf	wait4Start@waitCount,c
  2644                           
  2645                           ;i2c1.c: 83: if(lastError == I2C1_GOOD)
  2646  00F048  504D               	movf	_lastError,w,c
  2647  00F04A  A4D8               	btfss	16344,2,c
  2648  00F04C  0012               	return	
  2649  00F04E  D003               	goto	l1483
  2650  00F050                     l260:
  2651                           
  2652                           ;i2c1.c: 86: {
  2653                           ;i2c1.c: 87: if(!I2C1CON0bits.S)
  2654  00F050  013D               	movlb	61	; () banked
  2655  00F052  AB73               	btfss	115,5,b	;volatile
  2656  00F054  0012               	return	
  2657  00F056                     l1483:
  2658                           
  2659                           ; BSR set to: 61
  2660                           ;i2c1.c: 91: else
  2661                           ;i2c1.c: 92: {
  2662                           ;i2c1.c: 93: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2663                           
  2664                           ; BSR set to: 61
  2665                           ;i2c1.c: 90: }
  2666  00F056  2E01               	decfsz	wait4Start@waitCount,f,c
  2667  00F058  D7FB               	goto	l260
  2668                           
  2669                           ;i2c1.c: 94: }
  2670                           ;i2c1.c: 95: }
  2671                           ;i2c1.c: 96: lastError = I2C1_FAIL_TIMEOUT;
  2672  00F05A  0E01               	movlw	1
  2673  00F05C  6E4D               	movwf	_lastError,c
  2674  00F05E  0012               	return	
  2675  00F060                     __end_of_wait4Start:
  2676                           	opt stack 0
  2677                           
  2678 ;; *************** function _wait4MDRSetcount *****************
  2679 ;; Defined at:
  2680 ;;		line 182 in file "mcc_generated_files/i2c1.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  count           1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  count           1    0[COMRAM] unsigned char 
  2685 ;;  waitCount       1    1[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_i2c1_read1ByteRegister
  2705 ;;		_i2c1_readDataBlock
  2706 ;;		_i2c1_read2ByteRegister
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text14
  2711  00F11E                     __ptext14:
  2712                           	opt stack 0
  2713  00F11E                     _wait4MDRSetcount:
  2714                           	opt stack 28
  2715                           
  2716                           ;incstack = 0
  2717                           ;wait4MDRSetcount@count stored from wreg
  2718  00F11E  6E01               	movwf	wait4MDRSetcount@count,c
  2719                           
  2720                           ;i2c1.c: 184: uint8_t waitCount = 255;
  2721  00F120  6802               	setf	wait4MDRSetcount@waitCount,c
  2722                           
  2723                           ;i2c1.c: 185: if(lastError == I2C1_GOOD)
  2724  00F122  504D               	movf	_lastError,w,c
  2725  00F124  A4D8               	btfss	16344,2,c
  2726  00F126  0012               	return	
  2727  00F128  D007               	goto	l1549
  2728  00F12A                     l305:
  2729                           
  2730                           ;i2c1.c: 188: {
  2731                           ;i2c1.c: 189: if(I2C1CON0bits.MDR)
  2732  00F12A  013D               	movlb	61	; () banked
  2733  00F12C  A773               	btfss	115,3,b	;volatile
  2734  00F12E  D004               	goto	l1549
  2735                           
  2736                           ; BSR set to: 61
  2737                           ;i2c1.c: 190: {
  2738                           ;i2c1.c: 191: I2C1CNT = count;
  2739  00F130  0060  F007  FD6C   	movff	wait4MDRSetcount@count,15724	;volatile
  2740                           
  2741                           ;i2c1.c: 192: return;
  2742  00F136  0012               	return	
  2743  00F138                     l1549:
  2744                           
  2745                           ; BSR set to: 61
  2746                           ;i2c1.c: 194: else
  2747                           ;i2c1.c: 195: {
  2748                           ;i2c1.c: 196: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2749                           
  2750                           ; BSR set to: 61
  2751                           ;i2c1.c: 193: }
  2752  00F138  2E02               	decfsz	wait4MDRSetcount@waitCount,f,c
  2753  00F13A  D7F7               	goto	l305
  2754                           
  2755                           ;i2c1.c: 197: }
  2756                           ;i2c1.c: 198: }
  2757                           ;i2c1.c: 199: lastError = I2C1_FAIL_TIMEOUT;
  2758  00F13C  0E01               	movlw	1
  2759  00F13E  6E4D               	movwf	_lastError,c
  2760  00F140  0012               	return	
  2761  00F142                     __end_of_wait4MDRSetcount:
  2762                           	opt stack 0
  2763                           
  2764 ;; *************** function _wait4BusFree *****************
  2765 ;; Defined at:
  2766 ;;		line 100 in file "mcc_generated_files/i2c1.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  waitCount       1    0[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        1 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_i2c1_write1ByteRegister
  2790 ;;		_i2c1_read1ByteRegister
  2791 ;;		_i2c1_readDataBlock
  2792 ;;		_i2c1_write2ByteRegister
  2793 ;;		_i2c1_writeNBytes
  2794 ;;		_i2c1_read2ByteRegister
  2795 ;;		_i2c1_readNBytes
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text15
  2800  00F02C                     __ptext15:
  2801                           	opt stack 0
  2802  00F02C                     _wait4BusFree:
  2803                           	opt stack 28
  2804                           
  2805                           ;i2c1.c: 102: uint8_t waitCount = 255;
  2806                           
  2807                           ;incstack = 0
  2808  00F02C  6801               	setf	wait4BusFree@waitCount,c
  2809                           
  2810                           ;i2c1.c: 103: if(lastError == I2C1_GOOD)
  2811  00F02E  504D               	movf	_lastError,w,c
  2812  00F030  A4D8               	btfss	16344,2,c
  2813  00F032  0012               	return	
  2814  00F034  D003               	goto	l1495
  2815  00F036                     l269:
  2816                           
  2817                           ;i2c1.c: 106: {
  2818                           ;i2c1.c: 107: if(I2C1STAT0bits.BFRE)
  2819  00F036  013D               	movlb	61	; () banked
  2820  00F038  BF77               	btfsc	119,7,b	;volatile
  2821  00F03A  0012               	return	
  2822  00F03C                     l1495:
  2823                           
  2824                           ; BSR set to: 61
  2825                           ;i2c1.c: 111: else
  2826                           ;i2c1.c: 112: {
  2827                           ;i2c1.c: 113: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2828                           
  2829                           ; BSR set to: 61
  2830                           ;i2c1.c: 110: }
  2831  00F03C  2E01               	decfsz	wait4BusFree@waitCount,f,c
  2832  00F03E  D7FB               	goto	l269
  2833                           
  2834                           ;i2c1.c: 114: }
  2835                           ;i2c1.c: 115: }
  2836                           ;i2c1.c: 116: lastError = I2C1_FAIL_TIMEOUT;
  2837  00F040  0E01               	movlw	1
  2838  00F042  6E4D               	movwf	_lastError,c
  2839  00F044  0012               	return	
  2840  00F046                     __end_of_wait4BusFree:
  2841                           	opt stack 0
  2842                           
  2843 ;; *************** function _sendByte *****************
  2844 ;; Defined at:
  2845 ;;		line 120 in file "mcc_generated_files/i2c1.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  data            1    wreg     unsigned char 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  data            1    0[COMRAM] unsigned char 
  2850 ;;  delayCounter    1    1[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_i2c1_write1ByteRegister
  2870 ;;		_i2c1_read1ByteRegister
  2871 ;;		_i2c1_readDataBlock
  2872 ;;		_i2c1_write2ByteRegister
  2873 ;;		_i2c1_writeNBytes
  2874 ;;		_i2c1_read2ByteRegister
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text16
  2879  00F0FA                     __ptext16:
  2880                           	opt stack 0
  2881  00F0FA                     _sendByte:
  2882                           	opt stack 28
  2883                           
  2884                           ;incstack = 0
  2885                           ;sendByte@data stored from wreg
  2886  00F0FA  6E01               	movwf	sendByte@data,c
  2887                           
  2888                           ;i2c1.c: 122: uint8_t delayCounter = 255;
  2889  00F0FC  6802               	setf	sendByte@delayCounter,c
  2890                           
  2891                           ;i2c1.c: 123: if(lastError == I2C1_GOOD)
  2892  00F0FE  504D               	movf	_lastError,w,c
  2893  00F100  A4D8               	btfss	16344,2,c
  2894  00F102  0012               	return	
  2895  00F104  D007               	goto	l1507
  2896  00F106                     l278:
  2897                           
  2898                           ;i2c1.c: 126: {
  2899                           ;i2c1.c: 127: if(I2C1STAT1bits.TXBE)
  2900  00F106  013D               	movlb	61	; () banked
  2901  00F108  AB78               	btfss	120,5,b	;volatile
  2902  00F10A  D004               	goto	l1507
  2903                           
  2904                           ; BSR set to: 61
  2905                           ;i2c1.c: 128: {
  2906                           ;i2c1.c: 129: I2C1TXB = data;
  2907  00F10C  0060  F007  FD6B   	movff	sendByte@data,15723	;volatile
  2908                           
  2909                           ;i2c1.c: 130: return;
  2910  00F112  0012               	return	
  2911  00F114                     l1507:
  2912                           
  2913                           ; BSR set to: 61
  2914                           ;i2c1.c: 132: else
  2915                           ;i2c1.c: 133: {
  2916                           ;i2c1.c: 134: _delay((unsigned long)((1)*(1000000/4000000.0)));
  2917                           
  2918                           ; BSR set to: 61
  2919                           ;i2c1.c: 131: }
  2920  00F114  2E02               	decfsz	sendByte@delayCounter,f,c
  2921  00F116  D7F7               	goto	l278
  2922                           
  2923                           ;i2c1.c: 135: }
  2924                           ;i2c1.c: 136: }
  2925                           ;i2c1.c: 137: lastError = I2C1_FAIL_TIMEOUT;
  2926  00F118  0E01               	movlw	1
  2927  00F11A  6E4D               	movwf	_lastError,c
  2928  00F11C  0012               	return	
  2929  00F11E                     __end_of_sendByte:
  2930                           	opt stack 0
  2931                           
  2932 ;; *************** function _receiveByte *****************
  2933 ;; Defined at:
  2934 ;;		line 141 in file "mcc_generated_files/i2c1.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  delayCounter    1    0[COMRAM] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      unsigned char 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;Total ram usage:        1 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_i2c1_read1ByteRegister
  2958 ;;		_i2c1_readDataBlock
  2959 ;;		_i2c1_read2ByteRegister
  2960 ;;		_i2c1_readNBytes
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text17
  2965  00F096                     __ptext17:
  2966                           	opt stack 0
  2967  00F096                     _receiveByte:
  2968                           	opt stack 28
  2969                           
  2970                           ;i2c1.c: 143: uint8_t delayCounter = 255;
  2971                           
  2972                           ;incstack = 0
  2973  00F096  6801               	setf	receiveByte@delayCounter,c
  2974                           
  2975                           ;i2c1.c: 144: if(lastError == I2C1_GOOD)
  2976  00F098  504D               	movf	_lastError,w,c
  2977  00F09A  B4D8               	btfsc	16344,2,c
  2978  00F09C  D006               	goto	l1521
  2979  00F09E  D009               	goto	l285
  2980  00F0A0                     l287:
  2981                           
  2982                           ;i2c1.c: 147: {
  2983                           ;i2c1.c: 148: if(I2C1STAT1bits.RXBF)
  2984  00F0A0  013D               	movlb	61	; () banked
  2985  00F0A2  A178               	btfss	120,0,b	;volatile
  2986  00F0A4  D002               	goto	l1521
  2987                           
  2988                           ; BSR set to: 61
  2989                           ;i2c1.c: 149: {
  2990                           ;i2c1.c: 150: return I2C1RXB;
  2991  00F0A6  516A               	movf	106,w,b	;volatile
  2992                           
  2993                           ; BSR set to: 61
  2994  00F0A8  0012               	return	
  2995  00F0AA                     l1521:
  2996                           
  2997                           ; BSR set to: 61
  2998                           ;i2c1.c: 152: else
  2999                           ;i2c1.c: 153: {
  3000                           ;i2c1.c: 154: _delay((unsigned long)((1)*(1000000/4000000.0)));
  3001                           
  3002                           ; BSR set to: 61
  3003                           ;i2c1.c: 151: }
  3004  00F0AA  2E01               	decfsz	receiveByte@delayCounter,f,c
  3005  00F0AC  D7F9               	goto	l287
  3006                           
  3007                           ;i2c1.c: 155: }
  3008                           ;i2c1.c: 156: }
  3009                           ;i2c1.c: 157: lastError = I2C1_FAIL_TIMEOUT;
  3010  00F0AE  0E01               	movlw	1
  3011  00F0B0  6E4D               	movwf	_lastError,c
  3012  00F0B2                     l285:
  3013                           
  3014                           ;i2c1.c: 158: }
  3015                           ;i2c1.c: 159: return 0;
  3016  00F0B2  0E00               	movlw	0
  3017  00F0B4  0012               	return	
  3018  00F0B6                     __end_of_receiveByte:
  3019                           	opt stack 0
  3020                           
  3021 ;; *************** function _i2c1_getLastError *****************
  3022 ;; Defined at:
  3023 ;;		line 75 in file "mcc_generated_files/i2c1.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      enum E26611
  3030 ;; Registers used:
  3031 ;;		wreg, status,2
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_bmp280_i2c_init
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text18
  3051  00EFFE                     __ptext18:
  3052                           	opt stack 0
  3053  00EFFE                     _i2c1_getLastError:
  3054                           	opt stack 29
  3055                           
  3056                           ;i2c1.c: 77: return lastError;
  3057                           
  3058                           ;incstack = 0
  3059  00EFFE  504D               	movf	_lastError,w,c
  3060  00F000  0012               	return	
  3061  00F002                     __end_of_i2c1_getLastError:
  3062                           	opt stack 0
  3063                           
  3064 ;; *************** function _SYSTEM_Initialize *****************
  3065 ;; Defined at:
  3066 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		_I2C1_Initialize
  3089 ;;		_OSCILLATOR_Initialize
  3090 ;;		_PIN_MANAGER_Initialize
  3091 ;;		_PMD_Initialize
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text19
  3098  00F002                     __ptext19:
  3099                           	opt stack 0
  3100  00F002                     _SYSTEM_Initialize:
  3101                           	opt stack 29
  3102                           
  3103                           ;mcc.c: 52: PMD_Initialize();
  3104                           
  3105                           ;incstack = 0
  3106  00F002  EC6B  F078         	call	_PMD_Initialize	;wreg free
  3107                           
  3108                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3109  00F006  EC1B  F079         	call	_PIN_MANAGER_Initialize	;wreg free
  3110                           
  3111                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3112  00F00A  EC0A  F078         	call	_OSCILLATOR_Initialize	;wreg free
  3113                           
  3114                           ;mcc.c: 55: I2C1_Initialize();
  3115  00F00E  ECA1  F078         	call	_I2C1_Initialize	;wreg free
  3116  00F012  0012               	return		;funcret
  3117  00F014                     __end_of_SYSTEM_Initialize:
  3118                           	opt stack 0
  3119                           
  3120 ;; *************** function _PMD_Initialize *****************
  3121 ;; Defined at:
  3122 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_SYSTEM_Initialize
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text20
  3150  00F0D6                     __ptext20:
  3151                           	opt stack 0
  3152  00F0D6                     _PMD_Initialize:
  3153                           	opt stack 29
  3154                           
  3155                           ;mcc.c: 75: PMD0 = 0x00;
  3156                           
  3157                           ;incstack = 0
  3158  00F0D6  0E00               	movlw	0
  3159  00F0D8  0139               	movlb	57	; () banked
  3160  00F0DA  6FC0               	movwf	192,b	;volatile
  3161                           
  3162                           ;mcc.c: 77: PMD1 = 0x00;
  3163  00F0DC  0E00               	movlw	0
  3164  00F0DE  6FC1               	movwf	193,b	;volatile
  3165                           
  3166                           ;mcc.c: 79: PMD2 = 0x00;
  3167  00F0E0  0E00               	movlw	0
  3168  00F0E2  6FC2               	movwf	194,b	;volatile
  3169                           
  3170                           ;mcc.c: 81: PMD3 = 0x00;
  3171  00F0E4  0E00               	movlw	0
  3172  00F0E6  6FC3               	movwf	195,b	;volatile
  3173                           
  3174                           ;mcc.c: 83: PMD4 = 0x00;
  3175  00F0E8  0E00               	movlw	0
  3176  00F0EA  6FC4               	movwf	196,b	;volatile
  3177                           
  3178                           ;mcc.c: 85: PMD5 = 0x00;
  3179  00F0EC  0E00               	movlw	0
  3180  00F0EE  6FC5               	movwf	197,b	;volatile
  3181                           
  3182                           ;mcc.c: 87: PMD6 = 0x00;
  3183  00F0F0  0E00               	movlw	0
  3184  00F0F2  6FC6               	movwf	198,b	;volatile
  3185                           
  3186                           ;mcc.c: 89: PMD7 = 0x00;
  3187  00F0F4  0E00               	movlw	0
  3188  00F0F6  6FC7               	movwf	199,b	;volatile
  3189                           
  3190                           ; BSR set to: 57
  3191  00F0F8  0012               	return		;funcret
  3192  00F0FA                     __end_of_PMD_Initialize:
  3193                           	opt stack 0
  3194                           
  3195 ;; *************** function _PIN_MANAGER_Initialize *****************
  3196 ;; Defined at:
  3197 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_SYSTEM_Initialize
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text21
  3225  00F236                     __ptext21:
  3226                           	opt stack 0
  3227  00F236                     _PIN_MANAGER_Initialize:
  3228                           	opt stack 29
  3229                           
  3230                           ;pin_manager.c: 62: LATA = 0x00;
  3231                           
  3232                           ; BSR set to: 57
  3233                           ;incstack = 0
  3234  00F236  0E00               	movlw	0
  3235  00F238  013F               	movlb	63	; () banked
  3236  00F23A  6FBA               	movwf	186,b	;volatile
  3237                           
  3238                           ;pin_manager.c: 63: LATB = 0x00;
  3239  00F23C  0E00               	movlw	0
  3240  00F23E  6FBB               	movwf	187,b	;volatile
  3241                           
  3242                           ;pin_manager.c: 64: LATC = 0x00;
  3243  00F240  0E00               	movlw	0
  3244  00F242  6FBC               	movwf	188,b	;volatile
  3245                           
  3246                           ; BSR set to: 63
  3247                           ;pin_manager.c: 69: TRISA = 0xFF;
  3248  00F244  69C2               	setf	194,b	;volatile
  3249                           
  3250                           ; BSR set to: 63
  3251                           ;pin_manager.c: 70: TRISB = 0xFF;
  3252  00F246  69C3               	setf	195,b	;volatile
  3253                           
  3254                           ;pin_manager.c: 71: TRISC = 0xF4;
  3255  00F248  0EF4               	movlw	244
  3256  00F24A  6FC4               	movwf	196,b	;volatile
  3257                           
  3258                           ;pin_manager.c: 76: ANSELC = 0xFC;
  3259  00F24C  0EFC               	movlw	252
  3260  00F24E  013A               	movlb	58	; () banked
  3261  00F250  6F60               	movwf	96,b	;volatile
  3262                           
  3263                           ; BSR set to: 58
  3264                           ;pin_manager.c: 77: ANSELB = 0xFF;
  3265  00F252  6950               	setf	80,b	;volatile
  3266                           
  3267                           ; BSR set to: 58
  3268                           ;pin_manager.c: 78: ANSELA = 0xFF;
  3269  00F254  6940               	setf	64,b	;volatile
  3270                           
  3271                           ;pin_manager.c: 83: WPUE = 0x00;
  3272  00F256  0E00               	movlw	0
  3273  00F258  6F81               	movwf	129,b	;volatile
  3274                           
  3275                           ;pin_manager.c: 84: WPUB = 0x00;
  3276  00F25A  0E00               	movlw	0
  3277  00F25C  6F51               	movwf	81,b	;volatile
  3278                           
  3279                           ;pin_manager.c: 85: WPUA = 0x00;
  3280  00F25E  0E00               	movlw	0
  3281  00F260  6F41               	movwf	65,b	;volatile
  3282                           
  3283                           ;pin_manager.c: 86: WPUC = 0x00;
  3284  00F262  0E00               	movlw	0
  3285  00F264  6F61               	movwf	97,b	;volatile
  3286                           
  3287                           ;pin_manager.c: 91: ODCONA = 0x00;
  3288  00F266  0E00               	movlw	0
  3289  00F268  6F42               	movwf	66,b	;volatile
  3290                           
  3291                           ;pin_manager.c: 92: ODCONB = 0x07;
  3292  00F26A  0E07               	movlw	7
  3293  00F26C  6F52               	movwf	82,b	;volatile
  3294                           
  3295                           ;pin_manager.c: 93: ODCONC = 0x1F;
  3296  00F26E  0E1F               	movlw	31
  3297  00F270  6F62               	movwf	98,b	;volatile
  3298                           
  3299                           ; BSR set to: 58
  3300                           ;pin_manager.c: 98: SLRCONA = 0xFF;
  3301  00F272  6943               	setf	67,b	;volatile
  3302                           
  3303                           ; BSR set to: 58
  3304                           ;pin_manager.c: 99: SLRCONB = 0xFF;
  3305  00F274  6953               	setf	83,b	;volatile
  3306                           
  3307                           ; BSR set to: 58
  3308                           ;pin_manager.c: 100: SLRCONC = 0xFF;
  3309  00F276  6963               	setf	99,b	;volatile
  3310                           
  3311                           ;pin_manager.c: 109: RC0PPS = 0x21;
  3312  00F278  0E21               	movlw	33
  3313  00F27A  6F10               	movwf	16,b	;volatile
  3314                           
  3315                           ;pin_manager.c: 110: I2C1SDAPPS = 0x11;
  3316  00F27C  0E11               	movlw	17
  3317  00F27E  6FE4               	movwf	228,b	;volatile
  3318                           
  3319                           ;pin_manager.c: 111: RC1PPS = 0x22;
  3320  00F280  0E22               	movlw	34
  3321  00F282  6F11               	movwf	17,b	;volatile
  3322                           
  3323                           ;pin_manager.c: 112: I2C1SCLPPS = 0x10;
  3324  00F284  0E10               	movlw	16
  3325  00F286  6FE3               	movwf	227,b	;volatile
  3326                           
  3327                           ; BSR set to: 58
  3328  00F288  0012               	return		;funcret
  3329  00F28A                     __end_of_PIN_MANAGER_Initialize:
  3330                           	opt stack 0
  3331                           
  3332 ;; *************** function _OSCILLATOR_Initialize *****************
  3333 ;; Defined at:
  3334 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_SYSTEM_Initialize
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text22
  3362  00F014                     __ptext22:
  3363                           	opt stack 0
  3364  00F014                     _OSCILLATOR_Initialize:
  3365                           	opt stack 29
  3366                           
  3367                           ;mcc.c: 61: OSCCON1 = 0x70;
  3368                           
  3369                           ; BSR set to: 58
  3370                           ;incstack = 0
  3371  00F014  0E70               	movlw	112
  3372  00F016  0139               	movlb	57	; () banked
  3373  00F018  6FD9               	movwf	217,b	;volatile
  3374                           
  3375                           ;mcc.c: 63: OSCCON3 = 0x00;
  3376  00F01A  0E00               	movlw	0
  3377  00F01C  6FDB               	movwf	219,b	;volatile
  3378                           
  3379                           ;mcc.c: 65: OSCEN = 0x00;
  3380  00F01E  0E00               	movlw	0
  3381  00F020  6FDD               	movwf	221,b	;volatile
  3382                           
  3383                           ;mcc.c: 67: OSCFRQ = 0x02;
  3384  00F022  0E02               	movlw	2
  3385  00F024  6FDF               	movwf	223,b	;volatile
  3386                           
  3387                           ;mcc.c: 69: OSCTUNE = 0x00;
  3388  00F026  0E00               	movlw	0
  3389  00F028  6FDE               	movwf	222,b	;volatile
  3390                           
  3391                           ; BSR set to: 57
  3392  00F02A  0012               	return		;funcret
  3393  00F02C                     __end_of_OSCILLATOR_Initialize:
  3394                           	opt stack 0
  3395                           
  3396 ;; *************** function _I2C1_Initialize *****************
  3397 ;; Defined at:
  3398 ;;		line 57 in file "mcc_generated_files/i2c1.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_SYSTEM_Initialize
  3422 ;;		_i2c1_write1ByteRegister
  3423 ;;		_i2c1_read1ByteRegister
  3424 ;;		_i2c1_readDataBlock
  3425 ;;		_i2c1_write2ByteRegister
  3426 ;;		_i2c1_writeNBytes
  3427 ;;		_i2c1_read2ByteRegister
  3428 ;;		_i2c1_readNBytes
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text23
  3433  00F142                     __ptext23:
  3434                           	opt stack 0
  3435  00F142                     _I2C1_Initialize:
  3436                           	opt stack 28
  3437                           
  3438                           ;i2c1.c: 59: if(!I2C1CON0bits.EN || lastError != I2C1_GOOD)
  3439                           
  3440                           ; BSR set to: 57
  3441                           ;incstack = 0
  3442  00F142  013D               	movlb	61	; () banked
  3443  00F144  AF73               	btfss	115,7,b	;volatile
  3444  00F146  D003               	goto	u610
  3445                           
  3446                           ; BSR set to: 61
  3447  00F148  504D               	movf	_lastError,w,c
  3448  00F14A  B4D8               	btfsc	16344,2,c
  3449  00F14C  0012               	return	
  3450  00F14E                     u610:
  3451                           
  3452                           ; BSR set to: 61
  3453                           ;i2c1.c: 60: {
  3454                           ;i2c1.c: 61: lastError = I2C1_GOOD;
  3455                           
  3456                           ; BSR set to: 61
  3457  00F14E  0E00               	movlw	0
  3458  00F150  6E4D               	movwf	_lastError,c
  3459                           
  3460                           ;i2c1.c: 63: I2C1CON1 = 0x80;
  3461  00F152  0E80               	movlw	128
  3462  00F154  6F74               	movwf	116,b	;volatile
  3463                           
  3464                           ;i2c1.c: 65: I2C1CON2 = 0x00;
  3465  00F156  0E00               	movlw	0
  3466  00F158  6F75               	movwf	117,b	;volatile
  3467                           
  3468                           ;i2c1.c: 67: I2C1CLK = 0x00;
  3469  00F15A  0E00               	movlw	0
  3470  00F15C  6F7B               	movwf	123,b	;volatile
  3471                           
  3472                           ;i2c1.c: 69: I2C1CON0 = 0x84;
  3473  00F15E  0E84               	movlw	132
  3474  00F160  6F73               	movwf	115,b	;volatile
  3475                           
  3476                           ;i2c1.c: 70: I2C1PIR = 0;
  3477  00F162  0E00               	movlw	0
  3478  00F164  6F79               	movwf	121,b	;volatile
  3479                           
  3480                           ;i2c1.c: 71: I2C1ERR = 0;
  3481  00F166  0E00               	movlw	0
  3482  00F168  6F76               	movwf	118,b	;volatile
  3483  00F16A  0012               	return	
  3484  00F16C                     __end_of_I2C1_Initialize:
  3485                           	opt stack 0
  3486  0000                     
  3487                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     72      77
    BANK0           160      0      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    i2c1_readDataBlock@data	PTR unsigned char  size(2) Largest target is 24
		 -> bmp280_i2c_read_press_raw@p_read(COMRAM[3]), bmp280_i2c_read_temp_i32@t_read(COMRAM[3]), bmp280_calib(BANK0[24]), 


Critical Paths under _main in COMRAM

    _main->_bmp280_i2c_read_press_i32
    _bmp280_i2c_set_ctrl->_i2c1_write1ByteRegister
    _bmp280_i2c_set_conf->_i2c1_read1ByteRegister
    _bmp280_i2c_set_conf->_i2c1_write1ByteRegister
    _i2c1_write1ByteRegister->_sendByte
    _i2c1_read1ByteRegister->_sendByte
    _i2c1_read1ByteRegister->_wait4MDRSetcount
    _bmp280_i2c_read_temp_i32->___lmul
    _bmp280_i2c_read_press_i32->_bmp280_i2c_read_press_raw
    _bmp280_i2c_read_press_raw->_i2c1_readDataBlock
    _bmp280_i2c_init->_i2c1_readDataBlock
    _i2c1_readDataBlock->_sendByte
    _i2c1_readDataBlock->_wait4MDRSetcount

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   13531
                                             64 COMRAM     8     8      0
                  _SYSTEM_Initialize
                    _bmp280_i2c_init
          _bmp280_i2c_read_press_i32
           _bmp280_i2c_read_temp_i32
                _bmp280_i2c_set_conf
                _bmp280_i2c_set_ctrl
 ---------------------------------------------------------------------------------
 (1) _bmp280_i2c_set_ctrl                                  8     6      2    1485
                                              5 COMRAM     8     6      2
            _i2c1_write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _bmp280_i2c_set_conf                                  7     6      1    2540
                                              5 COMRAM     7     6      1
             _i2c1_read1ByteRegister
            _i2c1_write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _i2c1_write1ByteRegister                              3     1      2    1244
                                              2 COMRAM     3     1      2
                    _I2C1_Initialize
                           _sendByte
                       _wait4BusFree
                         _wait4Start
                          _wait4Stop
 ---------------------------------------------------------------------------------
 (2) _i2c1_read1ByteRegister                               3     2      1    1130
                                              2 COMRAM     3     2      1
                    _I2C1_Initialize
                        _receiveByte
                           _sendByte
                       _wait4BusFree
                   _wait4MDRSetcount
                         _wait4Start
                          _wait4Stop
 ---------------------------------------------------------------------------------
 (1) _bmp280_i2c_read_temp_i32                            45    41      4    3794
                                             12 COMRAM    45    41      4
                             ___lmul
                 _i2c1_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _bmp280_i2c_read_press_i32                           37    33      4    4688
                                             27 COMRAM    37    33      4
                            ___lldiv
                             ___lmul
          _bmp280_i2c_read_press_raw
 ---------------------------------------------------------------------------------
 (2) _bmp280_i2c_read_press_raw                           20    16      4    1114
                                              7 COMRAM    20    16      4
                 _i2c1_readDataBlock
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2498
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _bmp280_i2c_init                                      0     0      0    1022
                  _i2c1_getLastError
                 _i2c1_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _i2c1_readDataBlock                                   5     1      4    1022
                                              2 COMRAM     5     1      4
                    _I2C1_Initialize
                        _receiveByte
                           _sendByte
                       _wait4BusFree
                   _wait4MDRSetcount
                         _wait4Start
                          _wait4Stop
 ---------------------------------------------------------------------------------
 (3) _wait4Stop                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait4Start                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait4MDRSetcount                                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _wait4BusFree                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendByte                                             2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _receiveByte                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c1_getLastError                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _bmp280_i2c_init
     _i2c1_getLastError
     _i2c1_readDataBlock
       _I2C1_Initialize
       _receiveByte
       _sendByte
       _wait4BusFree
       _wait4MDRSetcount
       _wait4Start
       _wait4Stop
   _bmp280_i2c_read_press_i32
     ___lldiv
     ___lmul
     _bmp280_i2c_read_press_raw
       _i2c1_readDataBlock
         _I2C1_Initialize
         _receiveByte
         _sendByte
         _wait4BusFree
         _wait4MDRSetcount
         _wait4Start
         _wait4Stop
   _bmp280_i2c_read_temp_i32
     ___lmul
     _i2c1_readDataBlock
       _I2C1_Initialize
       _receiveByte
       _sendByte
       _wait4BusFree
       _wait4MDRSetcount
       _wait4Start
       _wait4Stop
   _bmp280_i2c_set_conf
     _i2c1_read1ByteRegister
       _I2C1_Initialize
       _receiveByte
       _sendByte
       _wait4BusFree
       _wait4MDRSetcount
       _wait4Start
       _wait4Stop
     _i2c1_write1ByteRegister
       _I2C1_Initialize
       _sendByte
       _wait4BusFree
       _wait4Start
       _wait4Stop
   _bmp280_i2c_set_ctrl
     _i2c1_write1ByteRegister
       _I2C1_Initialize
       _sendByte
       _wait4BusFree
       _wait4Start
       _wait4Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     48      4D       1       81.1%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65       6        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Nov 03 22:34:17 2018

 __size_of_bmp280_i2c_read_temp_i32 0328           ?_bmp280_i2c_read_temp_i32 000D  
                       __CFG_CP$OFF 000000                                  l60 F304  
                       __CFG_LVP$ON 000000                                 l305 F12A  
                               l161 FD7E                                 l330 F3F2  
                               l162 FDC4                                 l331 F3DC  
                               l260 F050                                 l351 F34E  
                               l159 FC96                                 l352 F362  
                               l285 F0B2                                 l269 F036  
                               l278 F106                                 l287 F0A0  
                               l296 F06A                                 l690 F42E  
                               l691 F422                                 l694 F462  
                               l695 F470                                 u610 F14E  
                               u800 F432                                 u905 F76A  
                               u825 F214                                 u906 F770  
                               u755 F4AE                                 u915 F8B2  
                               u907 F77E                                 u835 F2C2  
                               u916 F8B8                                 u765 F4CA  
                               u925 F8FA                                 u917 F8C6  
                               u845 F538                                 u926 F900  
                               u935 F92A                                 u927 F90E  
                               u855 F554                                 u936 F930  
                               u945 FA3E                                 u937 F93E  
                               u865 F5EE                                 u946 FA44  
                               u866 F5F4                                 u955 FA8A  
                               u947 FA52                                 u875 F638  
                               u867 F602                                 u956 FA90  
                               u876 F63E                                 u965 FAD2  
                               u957 FA9E                                 u885 F6A0  
                               u877 F64C                                 u966 FAD8  
                               u886 F6A6                                 u975 FB02  
                               u967 FAE6                                 u895 F704  
                               u887 F6B4                                 u976 FB08  
                               u896 F70A                                 u985 FB84  
                               u977 FB16                                 u897 F718  
                               u986 FB8A                                 u995 FBF0  
                               u987 FB98                                 u996 FBF6  
                               u997 FC04          ?_bmp280_i2c_read_press_i32 001C  
                      _bmp280_calib 0060             __size_of_PMD_Initialize 0024  
        ?_bmp280_i2c_read_press_raw 0008                                 wreg 003FE8  
                     __CFG_BBEN$OFF 000000               wait4BusFree@waitCount 0001  
                      __CFG_ZCD$OFF 000000                                l1521 F0AA  
                              l1507 F114                                l1537 F070  
                              l1483 F056                                l1549 F138  
                              l1495 F03C                                u1020 FCBC  
                              u1005 FC4C                                u1006 FC52  
                              u1007 FC60                                u1040 FDEA  
                              u1105 FFB6                                u1025 FCB2  
                              u1106 FFBC                                u1050 FE2C  
                              u1107 FFCA                                u1060 FE5A  
                              u1045 FDE0                                u1055 FE22  
                              u1080 FF06                                u1065 FE50  
                              u1075 FEB0                                u1076 FEB6  
                              u1085 FEFC                                u1077 FEC4  
                              _LATA 003FBA                                _LATB 003FBB  
                              u1095 FF40                                _LATC 003FBC  
                              u1096 FF46                                u1097 FF54  
                              _PMD0 0039C0                                _PMD1 0039C1  
                              _PMD2 0039C2                                _PMD3 0039C3  
                              _PMD4 0039C4                                _PMD5 0039C5  
                              _PMD6 0039C6                                _PMD7 0039C7  
                              _WPUA 003A41                                _WPUB 003A51  
                              _WPUC 003A61                                _WPUE 003A81  
                     __CFG_FCMEN$ON 000000                                _main F2E4  
                              fsr2h 003FDA                                indf2 003FDF  
                              fsr2l 003FD9            ??_i2c1_read1ByteRegister 0004  
                              start FFFC                       _bmp280_t_fine 0049  
                     __CFG_CSWEN$ON 000000                        ___param_bank 000000  
   __end_of_i2c1_write1ByteRegister F19C      __size_of_OSCILLATOR_Initialize 0018  
     __end_of_OSCILLATOR_Initialize F02C         i2c1_write1ByteRegister@data 0004  
                             ?_main 0001                       __CFG_WDTE$OFF 000000  
                   __end_of___lldiv F48A                      __CFG_DEBUG$OFF 000000  
                             _OSCEN 0039DD                               _TRISA 003FC2  
                             _TRISB 003FC3                               _TRISC 003FC4  
               ___lmul@multiplicand 0005                   ??_I2C1_Initialize 0001  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                 wait4Start@waitCount 0001  
                __CFG_MCLRE$EXTMCLR 000000                    _wait4MDRSetcount F11E  
                             status 003FD8                        ?_receiveByte 0001  
                   __initialization F0B6                        __end_of_main F33E  
      i2c1_read1ByteRegister@result 0004                      __CFG_SAFEN$OFF 000000  
                            ??_main 0041                      __CFG_PR1WAY$ON 000000  
                     __activetblptr 000002          __end_of_i2c1_readDataBlock F400  
                            _ANSELA 003A40                              _ANSELB 003A50  
                            _ANSELC 003A60                     _bmp280_i2c_init F07A  
                            _RC0PPS 003A10                              _RC1PPS 003A11  
                            _ODCONA 003A42                              _ODCONB 003A52  
                            _ODCONC 003A62                      __CFG_WDTCCS$SC 000000  
                __CFG_RSTOSC$EXTOSC 000000                              _OSCFRQ 0039DF  
   __size_of_i2c1_read1ByteRegister 004C                      __CFG_XINST$OFF 000000  
                            ___lmul F33E                      __CFG_STVREN$ON 000000  
                         ??___lldiv 0009                              clear_0 F0BC  
                  __end_of_sendByte F11E                      _PMD_Initialize F0D6  
   bmp280_i2c_read_press_raw@p_read 0019                              tblptru 003FF8  
             wait4MDRSetcount@count 0001    __size_of_i2c1_write1ByteRegister 0030  
                 _SYSTEM_Initialize F002         __end_of_bmp280_i2c_set_conf F2E4  
                        __accesstop 0060             __end_of__initialization F0CC  
       __end_of_bmp280_i2c_set_ctrl F236                     __CFG_FEXTOSC$HS 000000  
                ?_SYSTEM_Initialize 0001                       ___rparam_used 000001  
                    __pcstackCOMRAM 0001                 ??_SYSTEM_Initialize 0001  
            __end_of_PMD_Initialize F0FA              _i2c1_read1ByteRegister F19C  
           __end_of_bmp280_i2c_init F096         ??_bmp280_i2c_read_press_i32 0020  
       ??_bmp280_i2c_read_press_raw 000C           __end_of_SYSTEM_Initialize F014  
                   __CFG_IVT1WAY$ON 000000             bmp280_i2c_set_conf@t_sb 000B  
                     ?_wait4BusFree 0001                          __pbssBANK0 0060  
                   __CFG_MVECEN$OFF 000000             bmp280_i2c_set_ctrl@ctrl 000D  
           bmp280_i2c_set_ctrl@mode 0007                __size_of_receiveByte 0020  
                           ?___lmul 0001                             _I2C1CLK 003D7B  
                           _I2C1CNT 003D6C                             _I2C1ERR 003D76  
                           _I2C1PIR 003D79                             _I2C1RXB 003D6A  
                           _I2C1TXB 003D6B                     __CFG_PPS1WAY$ON 000000  
                __size_of_wait4Stop 001A                     _I2C1_Initialize F142  
          __end_of_wait4MDRSetcount F142                      ___lmul@product 0009  
                   ?_PMD_Initialize 0001                 __CFG_PWRTS$PWRT_OFF 000000  
                           _OSCCON1 0039D9                             _OSCCON3 0039DB  
                           _OSCTUNE 0039DE                             _SLRCONA 003A43  
                           _SLRCONB 003A53                             _SLRCONC 003A63  
                    ??_wait4BusFree 0001           _bmp280_i2c_read_press_i32 F83C  
                         ?_sendByte 0001           _bmp280_i2c_read_press_raw F48A  
          _bmp280_i2c_read_temp_i32 F514                             __Hparam 0000  
                           __Lparam 0000                     __size_of___lmul 005E  
                           ___lldiv F400                             __pcinit F0B6  
                           __ramtop 1000                             __ptext0 F2E4  
                           __ptext1 F1E8                             __ptext2 F28A  
                           __ptext3 F16C                             __ptext4 F19C  
                           __ptext5 F514                             __ptext6 F83C  
                           __ptext7 F48A                             __ptext8 F33E  
                           __ptext9 F400           bmp280_i2c_read_temp_i32@T 0027  
                   __CFG_WRTAPP$OFF 000000               _OSCILLATOR_Initialize F014  
                  ?_bmp280_i2c_init 0001               i2c1_readDataBlock@len 0006  
          ??_PIN_MANAGER_Initialize 0001               i2c1_readDataBlock@reg 0003  
                   __CFG_WRTSAF$OFF 000000                         _I2C1PIRbits 003D79  
         wait4MDRSetcount@waitCount 0002          __size_of_SYSTEM_Initialize 0012  
           _i2c1_write1ByteRegister F16C                end_of_initialization F0CC  
              sendByte@delayCounter 0002                   __end_of_wait4Stop F07A  
    i2c1_write1ByteRegister@address 0005                          _wait4Start F046  
                     __Lmediumconst 0000                  _i2c1_readDataBlock F39C  
     bmp280_i2c_read_temp_i32@adc_T 0032                          ??_sendByte 0001  
           __end_of_I2C1_Initialize F16C                     ___lldiv@divisor 0005  
                   ___lldiv@counter 000D       bmp280_i2c_read_temp_i32@temp1 001F  
     bmp280_i2c_read_temp_i32@temp2 0036       bmp280_i2c_read_temp_i32@temp3 0023  
                           postdec2 003FDD           i2c1_readDataBlock@address 0007  
               ?_i2c1_readDataBlock 0003                             postinc0 003FEE  
                           postinc2 003FDE          bmp280_i2c_read_press_i32@P 0039  
             __CFG_WDTCPS$WDTCPS_31 000000           i2c1_read1ByteRegister@reg 0003  
                 _i2c1_getLastError EFFE                           _TRISAbits 003FC2  
                         _TRISBbits 003FC3                  ?_i2c1_getLastError 0001  
              ??_i2c1_readDataBlock 0007                 ??_i2c1_getLastError 0001  
              __end_of_wait4BusFree F046                      __end_of___lmul F39C  
           ?_i2c1_read1ByteRegister 0003           __end_of_i2c1_getLastError F002  
            ?_OSCILLATOR_Initialize 0001                 start_initialization F0B6  
         ??_i2c1_write1ByteRegister 0005     __size_of_PIN_MANAGER_Initialize 0054  
                       ?_wait4Start 0001                    ?_I2C1_Initialize 0001  
                  __CFG_LPBOREN$OFF 000000        __size_of_bmp280_i2c_set_conf 005A  
      __size_of_bmp280_i2c_set_ctrl 004E                    ??_PMD_Initialize 0001  
                          ??___lmul 0009      bmp280_i2c_read_press_i32@adc_P 002D  
    __end_of_i2c1_read1ByteRegister F1E8  __size_of_bmp280_i2c_read_press_i32 07C0  
                 ?_wait4MDRSetcount 0001  __size_of_bmp280_i2c_read_press_raw 008A  
                ??_wait4MDRSetcount 0001                         __pbssCOMRAM 0049  
        ??_bmp280_i2c_read_temp_i32 0011              bmp280_i2c_set_conf@cfg 000C  
                     ??_receiveByte 0001              _PIN_MANAGER_Initialize F236  
                      sendByte@data 0001                   __size_of_sendByte 0024  
                          ?___lldiv 0001                            _I2C1ADB1 003D6E  
                          _I2C1CON0 003D73                            _I2C1CON1 003D74  
                          _I2C1CON2 003D75   __end_of_bmp280_i2c_read_press_i32 FFFC  
        __size_of_i2c1_getLastError 0004                 __size_of_wait4Start 001A  
 __end_of_bmp280_i2c_read_press_raw F514              __CFG_BBSIZE$BBSIZE_512 000000  
                         _lastError 004D             receiveByte@delayCounter 0001  
                        _I2C1SDAPPS 003AE4                          _I2C1SCLPPS 003AE3  
                          _LATAbits 003FBA                            _LATBbits 003FBB  
                         _wait4Stop F060                 __CFG_BORV$VBOR_2P45 000000  
             __size_of_wait4BusFree 001A                       _I2C1STAT0bits 003D77  
                     _I2C1STAT1bits 003D78                 __end_of_receiveByte F0B6  
                wait4Stop@waitCount 0001          i2c1_write1ByteRegister@reg 0003  
                         main@press 0045                   ___lmul@multiplier 0001  
                      _wait4BusFree F02C            __size_of_bmp280_i2c_init 001C  
     _bmp280_i2c_read_temp_i32$1215 002B                          ?_wait4Stop 0001  
                          __Hrparam 0000                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000       bmp280_i2c_read_press_i32@var1 003D  
     bmp280_i2c_read_press_i32@var2 0035             ??_OSCILLATOR_Initialize 0001  
                  __size_of___lldiv 008A           bmp280_i2c_set_conf@filter 0006  
                      _I2C1CON0bits 003D73                 _bmp280_i2c_set_conf F28A  
               _bmp280_i2c_set_ctrl F1E8                            __ptext10 F07A  
                          __ptext11 F39C                            __ptext20 F0D6  
                          __ptext12 F060                            __ptext21 F236  
                          __ptext13 F046                            __ptext22 F014  
                          __ptext14 F11E                            __ptext23 F142  
                          __ptext15 F02C                            __ptext16 F0FA  
                          __ptext17 F096                            __ptext18 EFFE  
                          __ptext19 F002    __end_of_bmp280_i2c_read_temp_i32 F83C  
       __size_of_i2c1_readDataBlock 0064       i2c1_read1ByteRegister@address 0005  
                      ??_wait4Start 0001                       __size_of_main 005A  
                       _receiveByte F096                __CFG_WDTCWS$WDTCWS_7 000000  
            i2c1_readDataBlock@data 0004                            _sendByte F0FA  
              ?_bmp280_i2c_set_conf 0006                ?_bmp280_i2c_set_ctrl 0006  
                          main@temp 0041                  __end_of_wait4Start F060  
         bmp280_i2c_set_ctrl@osrs_p 0006           bmp280_i2c_set_ctrl@osrs_t 000C  
         __size_of_wait4MDRSetcount 0024                    ___lldiv@dividend 0001  
           ?_PIN_MANAGER_Initialize 0001                   __CFG_CLKOUTEN$OFF 000000  
                       ??_wait4Stop 0001      bmp280_i2c_read_temp_i32@t_read 002F  
    _bmp280_i2c_read_press_i32$1216 0031               ??_bmp280_i2c_set_conf 0007  
             ??_bmp280_i2c_set_ctrl 0008                   ??_bmp280_i2c_init 0008  
          __size_of_I2C1_Initialize 002A            ?_i2c1_write1ByteRegister 0003  
                  ___lldiv@quotient 0009      __end_of_PIN_MANAGER_Initialize F28A  
